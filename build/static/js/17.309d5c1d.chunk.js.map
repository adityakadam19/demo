{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","library/ErrorMessage/ErrorMessageForm.tsx","library/ErrorMessage/ErrorMessage.tsx","library/Card/TabulerCard.tsx","library/List/TabulerList.tsx","library/DropDown/DropDown.tsx","assets/style/CommonStyle.tsx","library/icon/icon1.tsx","components/AddHomeWork/AddHomeworkList.tsx","components/AddHomeWork/AddHomeWork.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","RootWrapper","concat","spacing","PageHeader","heading","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","_jsx","Container","children","display","alignItems","ErrorMessageForm","error","sx","ErrorMessage","textAlign","TabulerCard","item","clickEdit","Submit","Delete","Submit1","isMobile","setIsMobile","useState","window","addEventListener","handleResize","innerWidth","Card","mb","_jsxs","Grid","container","style","Hidden","mdDown","Tooltip","title","Text2","placement","px","overflow","whiteSpace","textOverflow","width","xs","md","Text1","Text3","IsSubmited","SendIcon","onClick","Id","EditIcon","DeleteIcon","TabulerList","ItemList","length","_Fragment","map","Item","i","DropDown","itemList","ClickItem","DefaultValue","Label","FormControl","fullWidth","NativeSelect","value","onChange","e","target","id","Value","Name","Styles","makeStyles","iIconExamSchedule","fontSize","marginTop","backgroundColor","borderRadius","marginRight","iIconSupport","Icon1","Note","open","setOpen","handleClick","prev","classes","flexDirection","justifyContent","variant","ClickAwayListener","onClickAway","handleClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","arrow","componentsProps","tooltip","marginLeft","transform","InfoTwoToneIcon","type","className","AddHomeworkList","dispatch","useDispatch","GetDelete","useSelector","state","AddHomeWork","DeleteHomework","GetSubmit","SubmitHomework","GetHomeWorkDetailsList","DetailsList","useEffect","toast","success","toastId","resetDeleteMessage","resetSubmitMessage","GetDetailsListBody","ClassDivisionId","Number","getDetailsList","confirm","GetSubmitHomeworkBody","getSubmitHomework","GetDeleteHomeworkBody","getDeleteHomework","ClassNameList","GetSubject","SubjectList","GetAddHomework","AddHomework","GetEditList","HomeworkListForEdit","loading","Loading","aRef","useRef","setId","subjectDescription","setSubjectDescription","selectclass","setSelectClass","selectclasserror","setSelectClasserror","selectsubject","setSelectSubject","selectsubjecterror","setSelectSubjecterror","selectdate","setSelectDate","getTodayformatDate","dateerror","setDateerror","descriptionerror","setdescriptionerror","selectdateerror","setSelectdateerror","fileData","setFileData","Attachment","setAttachment","fileName","setFileName","Error","setError","GetAddHomeworkBody","parseInt","SubjectId","SubjectDescription","AssignDate","AcademicId","BinaryData","AttachmentName","Camera","UserId","UserRoleId","getSubjectNameList","getDateFormatted","resetError","resetHomeworkListForEdit","resetAddHomeworkMessage","IsAssignDateValid","msg","IsDateValid","IsTodayFutureDateValid","ReactQuill","modules","toolbarOptions","mt","ref","async","files","isValid","CheckFileValidation","base64URL","ChangeFileIntoBase64","slice","indexOf","name","current","join","float","onAddHomeWork","getAddHomework","SuspenseLoader","GetHomeworkEditBody","getHomeworkListForEdit"],"mappings":"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","file":"static/js/17.309d5c1d.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\nimport { useNavigate } from 'react-router';\n\ninterface PageHeaderProps {\n  heading: string;\n}\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(2)};\n        margin-bottom: ${theme.spacing(2)};\n`\n);\n\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n  if (sessionStorage.getItem(\"UserId\") === null ||\n    sessionStorage.getItem(\"UserId\") === undefined) {\n    navigate('/')\n  }\n  return (\n    <Container>\n      <RootWrapper display=\"flex\" alignItems=\"center\">\n      <HeadingStyle>{(heading)}</HeadingStyle>\n       </RootWrapper>\n    </Container>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n};\n\nexport default PageHeader;","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessageForm({error}) {\n  return (\n    <div>\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessageForm","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessage({error}) {\n  return (\n    <div>\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessage","import { Card, Grid, Hidden, Tooltip, Typography } from '@mui/material'\nimport React,{useState} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SendIcon from '@mui/icons-material/Send';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nfunction TabulerCard({item ,clickEdit ,Submit ,Delete ,Submit1=undefined}) {\n  const [isMobile, setIsMobile] = useState(false)\n\n  const handleResize = () => {\n\n      if (window.innerWidth < 900) {\n          setIsMobile(true)\n      } else {\n          setIsMobile(false)\n      }\n  }\n  window.addEventListener('resize', handleResize)\n  return (\n    <div>\n          <Card sx={{ mb: 1 }}  >\n            <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Hidden mdDown>\n              <Tooltip title={item.Text2} placement=\"left-start\">\n           <Typography px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}>{item.Text2}</Typography>\n           {/* <Typography dangerouslySetInnerHTML={{ __html: item.Text2 }} px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}></Typography> */}\n            </Tooltip>\n          \n              </Hidden>\n          \n              <Grid item xs={3} md={2}>\n                <Typography>{item.Text1}</Typography>\n              </Grid>\n              <Grid item xs={4.5} md={2}>\n                <Typography>{item.Text3}</Typography>\n              </Grid>\n          \n              <Grid item xs={1.5} md={1}>\n                {\n                  !item.IsSubmited && <SendIcon color={'info'}  onClick={() => Submit(item.Id)} />\n                }\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <EditIcon color={'success'} onClick={() => clickEdit(item.Id)} />\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <DeleteIcon  color={'error'} onClick={() => Delete(item.Id)} />\n              </Grid>\n              {/* {Submit1 &&  <Grid item xs={2} md={1}>\n                <ArrowForwardIcon color={'secondary'} onClick={() =>Submit1(item.Id)} />\n              </Grid> } */}\n             \n            </Grid>\n          </Card>\n\n    </div>\n  )\n}\n\nexport default TabulerCard","import React from 'react'\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\nimport TabulerCard from '../Card/TabulerCard'\n\nfunction TabulerList({ ItemList, clickEdit, Submit, Delete ,Submit1=undefined}) {\n    return (\n        <div>\n            {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\n                <>\n                    {ItemList.map((Item, i) => {\n                        return (\n                            <div key={i}>\n                                <TabulerCard item={Item} clickEdit={clickEdit} Submit={Submit} Delete={Delete} Submit1={Submit1}/>\n                            </div>\n                        )\n                    })}\n\n                </>\n            }\n        </div>\n    )\n}\n\nexport default TabulerList","import React from 'react'\nimport { MenuItem ,FormControl ,InputLabel ,Select ,Box ,NativeSelect} from '@mui/material'\nfunction DropDown({itemList, ClickItem , DefaultValue ,Label }) {\n  return (\n    <div>\n    <Box >\n    <FormControl fullWidth>\n        <NativeSelect fullWidth\n                value={DefaultValue}\n                onChange={(e) => ClickItem(e.target.value)}\n                id=\"select\"\n                >\n                {DefaultValue == '' && <option>{Label}</option>}\n                {itemList.map((item, i) => {\n                    return (\n                        <option value={item.Value} key={i}>\n                            {item.Name}\n                        </option>\n                    );\n                })}\n            </NativeSelect>\n        </FormControl>\n    </Box>\n    </div>\n  )\n}\n\nexport default DropDown","import { makeStyles } from '@mui/styles';\n\nexport const Styles = makeStyles({\n    iIconExamSchedule: {\n\n        fontSize: \"20px !important\",\n        marginTop: '10px',\n        backgroundColor: \"#e8a0e7\",\n        borderRadius: \"50px\",\n        marginRight: \"-15px\",\n        '@media (max-width: 280px)': {\n          fontSize: \"15px !important\",\n          marginTop: '10px',\n        },\n      },\n    \n    iIconSupport: {\n\n        fontSize: \"20px !important\",\n    \n    \n    \n        '@media (max-width: 280px)': {\n          fontSize: \"15px !important\",\n          // marginTop: '20px',  \n        },\n      },\n    })","import React, { useState } from 'react';\nimport { ClickAwayListener, IconButton, Typography, Container } from \"@mui/material\";\nimport Tooltip, { TooltipProps } from \"@mui/material/Tooltip\";\nimport { Styles } from 'src/assets/style/CommonStyle';\nimport InfoTwoToneIcon from '@mui/icons-material/InfoTwoTone';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme, Grid, MenuItem, Divider } from '@mui/material';\n\n\nIcon1.propTypes = {\n    Note: PropTypes.string,\n}\n\nfunction Icon1({ Note }) {\n\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => {\n        setOpen((prev) => !prev);\n    };\n\n    const handleClickAway = () => {\n        setOpen(false);\n    };\n    const theme = useTheme();\n\n    const DotLegend = styled('span')(\n        ({ theme }) => `\n          border-radius: 22px;\n          width: ${theme.spacing(1.5)};\n          height: ${theme.spacing(1.5)};\n          display: inline-block;\n          margin-right: ${theme.spacing(1)};\n          margin-top: -${theme.spacing(0.1)};\n      `\n    );\n\n    const classes = Styles();\n\n    return (\n        <>\n            <Container>\n                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 2, marginTop: '-27px' }}>\n                    <Typography variant=\"body2\" fontSize='15px'>\n                        {/* <DotLegend className={classes.Listfont1}\n                            style={{ background: 'darkmagenta', marginLeft: '9px', marginBottom: \"-2px\" }}\n                        /><small><b>Description</b></small> */}\n                        <br />\n                    </Typography> <br />\n                \n                    <ClickAwayListener onClickAway={handleClickAway}>\n\n                        <Tooltip\n                            PopperProps={{\n                                disablePortal: true,\n                            }}\n                            onClose={handleClick}\n                            open={open}\n                            disableFocusListener\n                            disableHoverListener\n                            disableTouchListener\n                            title={Note}\n                            arrow\n                            placement=\"left\"\n                            // alignItem=\"right\"\n\n                            componentsProps={{\n                                tooltip: {\n                                    sx: {\n                                        marginLeft: '70px',\n                                        transform: \"translate3d(20px, 14.5px, 0px) !important\",\n                                        marginTop: '-10px',\n\n                                    }\n                                }\n                            }}\n\n                        >\n\n                            <InfoTwoToneIcon type=\"button\" onClick={handleClick} className={classes.iIconExamSchedule} />\n                        </Tooltip>\n\n\n                    </ClickAwayListener>\n                </Box>\n            </Container>\n        </>\n    );\n}\n\nexport default Icon1;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { toast } from 'react-toastify';\nimport { getDeleteHomework, getDetailsList, getSubmitHomework, resetDeleteMessage, resetSubmitMessage } from 'src/requests/Teacher/RequestAddHomeWork';\nimport { IDeleteHomeworkBody, IGetDetailsListBody, ISubmitHomeworkBody } from 'src/Interface/Teacher/IAddHomework';\nimport TabulerList from 'src/library/List/TabulerList';\nfunction AddHomeworkList({ clickEdit }) {\nconst dispatch = useDispatch();\n  \n  const GetDelete: any = useSelector((state: RootState) => state.AddHomeWork.DeleteHomework);\n  const GetSubmit: any = useSelector((state: RootState) => state.AddHomeWork.SubmitHomework);\n  const GetHomeWorkDetailsList: any = useSelector((state: RootState) => state.AddHomeWork.DetailsList);\n  const Delete = (Id) => {\n    if(confirm('Are you sure you want to delete homework?')){\n      const GetDeleteHomeworkBody: IDeleteHomeworkBody = { Id: Id }\n      dispatch(getDeleteHomework(GetDeleteHomeworkBody));\n    }\n   }\n\n  useEffect(() => {\n    if (GetDelete !== '') {\n      toast.success(GetDelete, { toastId: 'success1' })\n      dispatch(resetDeleteMessage());\n    }\n  }, [GetDelete])\n\n  const Submit = (Id) => {\n    if(confirm('Are you sure you want to submit the homework?')){\n      const GetSubmitHomeworkBody: ISubmitHomeworkBody = { Id: Id }\n      dispatch(getSubmitHomework(GetSubmitHomeworkBody));\n    }\n   \n  }\n\n  useEffect(() => {\n    if (GetSubmit !== '') {\n      toast.success(GetSubmit, { toastId: 'success1' })\n      dispatch(resetSubmitMessage());\n    }\n  }, [GetSubmit])\n\n  useEffect(() => {\n    const GetDetailsListBody: IGetDetailsListBody = { ClassDivisionId: Number(sessionStorage.getItem(\"ClassDivisionId\")) }\n    dispatch(getDetailsList(GetDetailsListBody));\n  }, [])\n  return (\n    <div>\n  <TabulerList ItemList={GetHomeWorkDetailsList} clickEdit={clickEdit} Submit={Submit} Delete={Delete}/>\n   </div>\n  )\n}\n\nexport default AddHomeworkList","import React, { useState, useEffect, useRef } from 'react'\nimport PageHeader from 'src/library/heading/pageHeader'\nimport { Card, Container, TextField, Box, Button, Typography,Grid } from '@mui/material'\nimport DropDown from 'src/library/DropDown/DropDown'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { getClassNameList, getAddHomework, getHomeworkListForEdit, resetAddHomeworkMessage, getSubjectNameList, resetHomeworkListForEdit } from 'src/requests/Teacher/RequestAddHomeWork';\nimport { IGetClassNameListBody, IGetAddHomeworkBody, IGetDetailsListBody, IDeleteHomeworkBody, IHomeworkListForEditBody, IGetSubjectNameBody } from 'src/Interface/Teacher/IAddHomework';\nimport { toast } from 'react-toastify';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { ChangeFileIntoBase64, CheckFileValidation, IsDateValid, IsFutureDateValid, IsTodayFutureDateValid, getDateFormatted, getInputDateFormatted, getTodayformatDate, toolbarOptions } from '../Common/util';\nimport SuspenseLoader from 'src/layouts/Components/SuspenseLoader';\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\nimport AddHomeworkList from './AddHomeworkList';\nimport { Styles } from 'src/assets/style/CommonStyle';\nimport Icon1 from 'src/library/icon/icon1';\nimport { ButtonPrimary } from 'src/library/StyledComponents/CommonStyled';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction AddHomeWork() {\n\n    const GetHomeWork: any = useSelector((state: RootState) => state.AddHomeWork.ClassNameList);\n    const GetSubject: any = useSelector((state: RootState) => state.AddHomeWork.SubjectList);\n    const GetAddHomework: any = useSelector((state: RootState) => state.AddHomeWork.AddHomework);\n    const GetEditList: any = useSelector((state: RootState) => state.AddHomeWork.HomeworkListForEdit);\n\n    const loading = useSelector((state: RootState) => state.AddHomeWork.Loading);\n\n    const dispatch = useDispatch();\n    const aRef = useRef(null);\n    const classes = Styles();\n    const [Id, setId] = useState(0)\n    const [subjectDescription, setSubjectDescription] = useState('')\n    const [selectclass, setSelectClass] = useState(sessionStorage.getItem(\"ClassDivisionId\"));\n    const [selectclasserror, setSelectClasserror] = useState('');\n    const [selectsubject, setSelectSubject] = useState('');\n    const [selectsubjecterror, setSelectSubjecterror] = useState('');\n    const [selectdate, setSelectDate] = useState(getTodayformatDate());\n    const [dateerror, setDateerror] = useState('');\n    const [descriptionerror, setdescriptionerror] = useState('')\n    const [selectdateerror, setSelectdateerror] = useState('')\n    const [fileData, setFileData] = useState('');\n    const [Attachment, setAttachment] = useState('');\n    const [fileName, setFileName] = useState('');\n    const [Error, setError] = useState('');\n    const validFiles = ['jpg', 'jpeg', 'png', 'bmp']\n\n    // const GetClassNameListBody: IGetClassNameListBody = { Id: 0 }\n\n\n    const ClickItem = (value) => {\n        setSelectClass(value);\n    };\n\n    const ClickSubjectItem = (value) => {\n        setSelectSubject(value);\n    };\n\n    const changeFile = async (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            let isValid = CheckFileValidation(e.target.files[0], ['jpg', 'jpeg', 'png', 'bmp', 'pdf'], 2000000)\n            setError(isValid)\n            if (isValid === null) {\n                let base64URL: any = await ChangeFileIntoBase64(e.target.files[0]);\n                setFileData(base64URL.slice(base64URL.indexOf(',') + 1));\n                setFileName(e.target.files[0].name);\n            }\n            else {\n                aRef.current.value = null;\n            }\n        }\n    }\n\n    const GetAddHomeworkBody: IGetAddHomeworkBody =\n    {\n        Id: Id,\n        ClassDivisionId: parseInt(selectclass),\n        SubjectId: parseInt(selectsubject),\n        SubjectDescription: subjectDescription,\n        AssignDate: selectdate,\n        AcademicId: 4,\n        BinaryData: fileData,\n        AttachmentName: fileName,\n        Attachment: Attachment,\n        Camera: '',\n        UserId: 1,\n        UserRoleId: 1,\n    }\n\n\n\n    useEffect(() => {\n        // dispatch(getClassNameList(GetClassNameListBody));\n        dispatch(getSubjectNameList());\n    }, [])\n\n    useEffect(() => {\n        if (GetEditList !== null) {\n            setId(GetEditList.Id)\n            setSelectDate(getDateFormatted(GetEditList.AssignDate))\n            setSubjectDescription(GetEditList.SubjectDescription)\n            setSelectClass(GetEditList.ClassDivisionId)\n            setSelectSubject(GetEditList.SubjectId)\n            if (GetEditList.AttachmentName != null) {\n                setAttachment(GetEditList.Attachment)\n                setFileName(GetEditList.AttachmentName)\n            }\n            resetError();\n            dispatch(resetHomeworkListForEdit());\n\n        }\n    }, [GetEditList])\n\n    const clickEdit = (Id) => {\n        const GetHomeworkEditBody: IHomeworkListForEditBody = { Id: Id }\n        dispatch(getHomeworkListForEdit(GetHomeworkEditBody));\n    }\n\n    const onAddHomeWork = () => {\n        let isValid = true;\n\n        if (subjectDescription === '') {\n            setdescriptionerror('Field is required');\n            isValid = false;\n        } else {\n            setdescriptionerror('');\n        }\n\n        if (IsAssignDateValid(selectdate) !== '') {\n            setSelectdateerror(IsAssignDateValid(selectdate))\n            isValid = false;\n        }\n        if (selectclass === '') {\n            setSelectClasserror('Field is required');\n            isValid = false;\n        } else {\n            setSelectClasserror('');\n        }\n        if (selectsubject === '') {\n            setSelectSubjecterror('Field is required');\n            isValid = false;\n        } else {\n            setSelectSubjecterror('');\n        }\n\n        if (isValid) {\n            dispatch(getAddHomework(GetAddHomeworkBody));\n            setSubjectDescription('');\n            setSelectSubject('');\n            setSelectDate(getTodayformatDate());\n            setFileData('');\n            setFileName('');\n            aRef.current.value = \"\"\n        }\n    };\n\n    const resetError = () => {\n        setdescriptionerror('');\n        setSelectdateerror('');\n        setSelectSubjecterror('');\n        setSelectClasserror('');\n    }\n    useEffect(() => {\n        if (GetAddHomework !== '') {\n            toast.success(GetAddHomework, { toastId: 'success1' })\n            dispatch(resetAddHomeworkMessage());\n        }\n    }, [GetAddHomework])\n\n    const IsAssignDateValid = (value) => {\n        let msg = IsDateValid(value);\n        if (msg === '')\n            msg = IsTodayFutureDateValid(value);\n        return msg\n    }\n    return (\n        <Container>\n            <PageHeader heading={'Add Homework'} />\n            <Card>\n                {/* <DropDown itemList={GetHomeWork} ClickItem={ClickItem} DefaultValue={selectclass} Label={'Select Class'} /> */}\n                <ErrorMessageForm error={selectclasserror} />\n                <br></br>\n                <DropDown itemList={GetSubject} ClickItem={ClickSubjectItem} DefaultValue={selectsubject} Label={'Select Subject'} />\n                <ErrorMessageForm error={selectsubjecterror} />\n                <br></br>\n                <ReactQuill value={subjectDescription} modules={toolbarOptions}\n                    onChange={(value) => setSubjectDescription(value)} />\n                <ErrorMessageForm error={descriptionerror} />\n                {/* <TextField value={selectdate} onChange={(e) => setSelectDate(e.target.value)}\n                    onBlur={(e) => { setSelectdateerror(IsAssignDateValid(e.target.value)) }} />\n                (date format dd MMM yyyy e.g. <b>23 Aug 2023</b>)\n                <ErrorMessageForm error={selectdateerror} /> */}\n                <Box mt={2}>\n                    <input type=\"file\" ref={aRef} onChange={changeFile} ></input>\n                </Box>\n                {fileName}\n                <Box className={classes.iIconSupport}>\n                    <Icon1 Note={\"Supports only \" + validFiles.join(', ') + \" files types up to 2 MB\"} />\n                </Box>\n                {Error && <ErrorMessageForm error={Error} />}\n                  <Grid container>\n                    <Grid item xs={12} md={3} sx={{float:\"right\"}}>\n                        \n                    <ButtonPrimary  onClick={onAddHomeWork} >Submit&nbsp;<SendIcon fontSize=\"small\"/></ButtonPrimary>\n                    </Grid>\n                  </Grid>\n              \n            </Card>\n            <br></br>\n            {\n                loading ? <SuspenseLoader /> :\n                    <AddHomeworkList clickEdit={clickEdit} />\n            }\n\n        </Container>\n\n    )\n}\n\nexport default AddHomeWork"],"sourceRoot":""}