{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","libraries/styled/ErrormessageStyled.tsx","libraries/Training/RadioList.tsx","libraries/Training/ButtonField.tsx","libraries/Training/DynamicList.tsx","components/Enquiry/EnquiryList.tsx","components/Enquiry/StudentDetails.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","RootWrapper","concat","spacing","PageHeader","heading","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","_jsx","Container","children","display","alignItems","ErrorDetail","_templateObject2","_templateObject3","_templateObject4","RadioList","ItemList","ClickItem","Label","DefaultValue","ErrorMessage","console","log","_jsxs","_Fragment","RadioGroup","value","onChange","e","target","map","Item","i","FormControlLabel","Value","control","Radio","size","label","Name","ButtonField","variant","onClick","sx","borderRadius","DynamicList","HeaderList","IconList","ClickCheck","IsSelect","CheckAll","arr","IsActive","getIsCheckedAll","Id","Action","IsChecked","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","backgroundColor","item","TableCell","align","Checkbox","checked","Grow","in","timeout","TableBody","index","Text1","Text2","Text3","Text4","Text5","Text6","Text7","obj","Icon","EnquiryList","dispatch","useDispatch","enquiryList","useSelector","state","Enquiry","useEffect","getEnquiryList","pageIndex","setPageIndex","useState","paginatedList","slice","CallIcon","totalCount","length","startIndex","endIndex","Math","min","Grid","container","width","overflow","xs","gutterBottom","height","clickFollow","justifyContent","gap","handlePrevPage","disabled","handleNextPage","AddClass","toggleId","setToggleId","direction","sm","clickEnquiry","style","textAlign"],"mappings":"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","file":"static/js/28.9b169d7e.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\nimport { useNavigate } from 'react-router';\n\ninterface PageHeaderProps {\n  heading: string;\n}\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(2)};\n        margin-bottom: ${theme.spacing(2)};\n`\n);\n\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n  if (sessionStorage.getItem(\"UserId\") === null ||\n    sessionStorage.getItem(\"UserId\") === undefined) {\n    navigate('/')\n  }\n  return (\n    <Container>\n      <RootWrapper display=\"flex\" alignItems=\"center\">\n      <HeadingStyle>{(heading)}</HeadingStyle>\n       </RootWrapper>\n    </Container>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n};\n\nexport default PageHeader;","import { Typography, styled } from '@mui/material';\n\nexport const ErrorDetail = styled(Typography)`\n  font-size: 12px;\n  color: red;\n  text-align: center;\n  font-family: 'Roboto';\n  @media (max-width: 280px) {\n    font-size: 10px;\n  }\n`;\nexport const ShowMessage = styled(Typography)`\n  font-size: 12px;\n  // color: red;\n  text-align: center;\n  font-family: 'Roboto';\n  @media (max-width: 280px) {\n    font-size: 10px;\n  }\n`;\nexport const ErrorDetail1 = styled(Typography)`\n  font-size: 12px;\n  color: red;\n  margin-top: -10px;\n  font-family: 'Roboto';\n  @media (max-width: 280px) {\n    font-size: 10px;\n  }\n`;\n\nexport const ErrorDetail2 = styled(Typography)`\n  font-size: 12px;\n  color: red;\n\n  font-family: 'Roboto';\n  @media (max-width: 280px) {\n    font-size: 10px;\n  }\n`;\n","import { FormControlLabel, Radio, RadioGroup, Typography } from '@mui/material';\nimport { ErrorDetail } from '../styled/ErrormessageStyled';\n\n\nconst RadioList = ({ ItemList, ClickItem, Label, DefaultValue, ErrorMessage = '' }) => {\n    console.log(ErrorMessage);\n\n    return (<>\n        <Typography>{Label}</Typography>\n        <RadioGroup value={DefaultValue} onChange={(e) => ClickItem(e.target.value)}>\n            <div>\n\n                {ItemList?.map((Item, i) => {\n                    return (\n\n                        <FormControlLabel\n                            key={i}\n                            value={Item.Value}\n                            control={<Radio size=\"small\" />}\n                            label={Item.Name}\n                        />\n                    );\n                })}\n            </div>\n        </RadioGroup>\n        <ErrorDetail>{ErrorMessage}</ErrorDetail>\n    </>)\n}\n\nexport default RadioList","import { Button } from '@mui/material';\n\nconst ButtonField = ({ ClickItem, Label }) => {\n    return (<>\n        <Button variant=\"contained\" onClick={ClickItem} sx={{ borderRadius: '5px' }}>{Label}</Button>\n    </>)\n}\n\nexport default ButtonField\n","import { Checkbox, Grow } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nconst DynamicList = ({\n  HeaderList,\n  ItemList,\n  IconList = undefined,\n  ClickItem = undefined,\n  ClickCheck = undefined,\n  IsSelect = 0\n}) => {\n  const clickCheckbox = (value) => {\n    let arr = [];\n    arr = ItemList.map((Item) => {\n      return Item.Id === value\n        ? { ...Item, IsActive: !Item.IsActive }\n        : IsSelect == 1\n          ? { ...Item, IsActive: false }\n          : Item;\n    });\n    ClickCheck({ Id: value, Value: arr, Action: 'Select' });\n  };\n  const CheckAll = () => {\n    let arr = [];\n    arr = ItemList.map((Item) => {\n      return { ...Item, IsActive: !getIsCheckedAll() };\n    });\n    ClickCheck({ Id: 0, Value: arr, Action: 'Select' });\n  };\n  const getIsCheckedAll = () => {\n    let IsChecked = true;\n    ItemList.map((Item) => {\n      if (!Item.IsActive) {\n        IsChecked = false;\n      }\n    });\n    return IsChecked;\n  };\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={{ backgroundColor: '#4dd0e1' }}>\n            {HeaderList.map((item, i) => {\n              return (\n                <TableCell align=\"center\" key={i}>\n                  <b>{item}</b>\n                  {IsSelect == 2 && i == 0 && (\n                    <>\n                      <br></br>\n                      <Checkbox\n                        checked={getIsCheckedAll()}\n                        onChange={CheckAll}\n                      />\n                    </>\n                  )}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <Grow in={true} {...{ timeout: 1500 }}>\n          <TableBody>\n            {ItemList.map((item, index) => {\n              return (\n                <TableRow key={index}>\n\n                  {item.Text1 != undefined && (\n                    <TableCell align=\"center\">{item.Text1}</TableCell>\n                  )}\n                  {item.Text2 != undefined && (\n                    <TableCell align=\"center\">{item.Text2}</TableCell>\n                  )}\n                  {item.Text3 != undefined && (\n                    <TableCell align=\"center\">{item.Text3}</TableCell>\n                  )}\n                  {item.Text4 != undefined && (\n                    <TableCell align=\"center\">{item.Text4}</TableCell>\n                  )}\n                  {item.Text5 != undefined && (\n                    <TableCell align=\"center\">{item.Text5}</TableCell>\n                  )}\n                  {item.Text6 != undefined && (\n                    <TableCell align=\"center\">{item.Text6}</TableCell>\n                  )}\n                  {item.Text7 != undefined && (\n                    <TableCell align=\"center\">{item.Text7}</TableCell>\n                  )}\n                  {IconList?.map((obj, i) => {\n                    return (\n                      <TableCell\n                        align=\"center\"\n                        key={i}\n                        onClick={() => {\n                          ClickItem({ Id: item.Id, Action: obj.Action });\n                        }}\n                      >\n                        {obj.Icon}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Grow>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DynamicList;\n","import CallIcon from '@mui/icons-material/Call';\nimport { Container, Grid, Button, Typography, Box } from '@mui/material';\nimport DynamicList from 'src/libraries/Training/DynamicList';\nimport PageHeader from 'src/libraries/heading/PageHeader';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { getEnquiryList } from 'src/requests/Enquiry/RequestEnquiryList';\n\nconst EnquiryList = () => {\n  const dispatch = useDispatch();\n  const enquiryList = useSelector((state: RootState) => state.Enquiry.EnquiryList);\n\n  useEffect(() => {\n    dispatch(getEnquiryList());\n  }, [dispatch]);\n\n  console.log(enquiryList);\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const pageSize = 10;\n\n  const handleNextPage = () => {\n    setPageIndex(pageIndex + 1);\n  };\n\n  const handlePrevPage = () => {\n    setPageIndex(pageIndex - 1);\n  };\n\n  const paginatedList = enquiryList.slice(pageIndex * pageSize, (pageIndex + 1) * pageSize);\n\n  const HeaderList = [\"Name\", \"Class\", \"BirthDate\", \"Gender\", \"Phone\", \"Society\", \"Enquiry Date-Time\", \"Follow Up\"];\n  const IconList = [{ Id: 1, Icon: <CallIcon />, Action: 'Followup' }];\n\n  const totalCount = enquiryList.length;\n  const startIndex = pageIndex * pageSize + 1;\n  const endIndex = Math.min((pageIndex + 1) * pageSize, totalCount);\n\n  const clickFollow = () => {};\n\n  return (\n    <Container>\n      <Grid container spacing={2} sx={{ width: '100%', overflow: 'hidden' }}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" gutterBottom>Enquiry List</Typography>\n        </Grid>\n        <Grid item xs={12} sx={{ height: '500px', overflow: 'auto' }}>\n          <DynamicList HeaderList={HeaderList} ItemList={paginatedList} IconList={IconList} ClickItem={clickFollow} />\n        </Grid>\n        <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2 }}>\n          <Typography variant=\"body2\">Enquiry List {startIndex}-{endIndex} of {totalCount} Enquiries</Typography>\n          <Box sx={{ display: 'flex', gap: 2\n          }}>\n            <Button\n              onClick={handlePrevPage}\n              variant=\"outlined\"\n              disabled={pageIndex === 0}\n            >\n              Previous Page\n            </Button>\n            <Button\n              onClick={handleNextPage}\n              variant=\"outlined\"\n              disabled={(pageIndex + 1) * pageSize >= totalCount}\n            >\n              Next Page\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default EnquiryList;","import Container from '@mui/material/Container'\nimport Grid from '@mui/material/Grid'\nimport React, { useState } from 'react'\nimport Dropdown from 'src/libraries/Training/Dropdown'\nimport InputField from \"src/libraries/Training/InputField\"\nimport RadioList from \"src/libraries/Training/RadioList\"\nimport PageHeader from 'src/library/heading/pageHeader'\nimport EnquiryList from './EnquiryList'\nimport { Typography } from '@mui/material'\nimport ButtonField from 'src/libraries/Training/ButtonField'\nimport { useNavigate } from 'react-router'\n\nconst AddClass = () => {\n   const navigate = useNavigate(); \nconst enquiryList = [{ Id: 1, Name: \"Enquiry List\", Value: \"1\" },\n{ Id: 2, Name: \"Admission List\", Value: \"2\" },\n{ Id: 3, Name: \"Follow Ups\", Value: \"3\" },];\n\nconst [toggleId, setToggleId] = useState('1');\n\nconst clickToggle = (value)=>{\n    // setToggleId(value);\n};\nconst clickEnquiry =()=>{\n   navigate('/extended-sidebar/Student/AddEnquiry') \n}\n  return (\n   <>\n    <Container>\n        <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n            <Grid container spacing={2}>\n                <Grid item xs={12} display={'flex'}  justifyContent={'center'}>\n                {/* <Typography variant=\"h2\" gutterBottom >\n                        Student Details\n                    </Typography> */}\n                    <PageHeader heading='Student Details'/>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                    <ButtonField Label=\"AddEnquiry\" ClickItem={clickEnquiry}  />\n                    </Grid>\n                <Grid item xs={12} style={{ textAlign: 'right' }}>\n                    <RadioList ItemList={enquiryList} Label={''}\n                        DefaultValue={toggleId} ClickItem={clickToggle}\n                        ErrorMessage={undefined} />\n                </Grid>\n            </Grid>\n            </Grid>\n    </Container>\n    <EnquiryList/>\n   </>\n    \n  )\n}\n\nexport default AddClass\n\n"],"sourceRoot":""}