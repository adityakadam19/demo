{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/ErrorMessage/ErrorMessageForm.tsx","library/ErrorMessage/ErrorMessage.tsx","library/Card/TabulerCard.tsx","library/List/TabulerList.tsx","library/DropDown/DropDown.tsx","assets/style/CommonStyle.tsx","library/icon/icon1.tsx","components/AddSchoolNotice/AddSchoolNoticeList.tsx","components/AddSchoolNotice/AddSchoolNotice.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","ErrorMessageForm","error","_jsx","children","sx","ErrorMessage","textAlign","TabulerCard","item","clickEdit","Submit","Delete","Submit1","isMobile","setIsMobile","useState","window","addEventListener","handleResize","innerWidth","Card","mb","_jsxs","Grid","container","style","display","alignItems","Hidden","mdDown","Tooltip","title","Text2","placement","px","overflow","whiteSpace","textOverflow","width","xs","md","Text1","Text3","IsSubmited","SendIcon","onClick","Id","EditIcon","DeleteIcon","TabulerList","ItemList","length","_Fragment","map","Item","i","DropDown","itemList","ClickItem","DefaultValue","Label","FormControl","fullWidth","NativeSelect","value","onChange","e","target","id","Value","Name","Styles","makeStyles","iIconExamSchedule","fontSize","marginTop","backgroundColor","borderRadius","marginRight","iIconSupport","Icon1","Note","open","setOpen","handleClick","prev","classes","useTheme","concat","spacing","Container","flexDirection","justifyContent","variant","ClickAwayListener","onClickAway","handleClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","arrow","componentsProps","tooltip","marginLeft","transform","InfoTwoToneIcon","type","className","AddSchoolNoticeList","dispatch","useDispatch","DeleteSchoolNotice","useSelector","state","AddSchoolNotice","console","log","GetSend","sendNotice","SchoolNoticeList","useEffect","toast","success","toastId","resetDeleteMessage","resetSendMessage","GetSchoolNoticeListBody","ClassId","Number","sessionStorage","getItem","getSchoolNoticeList","confirm","GetSendNoticeBody","getSendnotice","GetDeleteSchoolNoticeBody","getDeleteSchoolNotice","aRef","useRef","setId","userId","setUserId","Title","setTitle","Titleerror","setTitleerror","NoticeDescription","setNoticeDescription","subjectDescription","setSubjectDescription","selectclass","setSelectClass","selectclasserror","setSelectClasserror","selectdate","setSelectDate","getTodayformatDate","dateerror","setDateerror","descriptionerror","setdescriptionerror","selectdateerror","setSelectdateerror","ChooseFile","setChooseFile","fileData","setFileData","Attachment","setAttachment","fileName","setFileName","Error","setError","setClassId","ClassNameList","ClassNameResult","SchoolNotice","GetEditList","EditSchoolNoticeList","ClassNameBody","StudentDetailsgetClassName","SchoolNoticeDetails","NoticeName","AssignDate","BinaryData","AttachmentName","UserId","ClassDivisionId","getDateFormatted","resetError","resetSchoolNoticeListForEdit","resetSchoolNoticeMessage","TextField","label","helperText","focused","ReactQuill","modules","toolbarOptions","mt","ref","async","files","isValid","CheckFileValidation","base64URL","ChangeFileIntoBase64","slice","indexOf","name","current","join","float","onAddSchoolNotice","alert","SchoolNoticeses","GetSchoolNoticeEditBody","getSchoolNoticeListForEdit"],"mappings":"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","file":"static/js/18.3dd3bcc8.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessageForm({error}) {\n  return (\n    <div>\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessageForm","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessage({error}) {\n  return (\n    <div>\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessage","import { Card, Grid, Hidden, Tooltip, Typography } from '@mui/material'\nimport React,{useState} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SendIcon from '@mui/icons-material/Send';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nfunction TabulerCard({item ,clickEdit ,Submit ,Delete ,Submit1=undefined}) {\n  const [isMobile, setIsMobile] = useState(false)\n\n  const handleResize = () => {\n\n      if (window.innerWidth < 900) {\n          setIsMobile(true)\n      } else {\n          setIsMobile(false)\n      }\n  }\n  window.addEventListener('resize', handleResize)\n  return (\n    <div>\n          <Card sx={{ mb: 1 }}  >\n            <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Hidden mdDown>\n              <Tooltip title={item.Text2} placement=\"left-start\">\n           <Typography px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}>{item.Text2}</Typography>\n           {/* <Typography dangerouslySetInnerHTML={{ __html: item.Text2 }} px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}></Typography> */}\n            </Tooltip>\n          \n              </Hidden>\n          \n              <Grid item xs={3} md={2}>\n                <Typography>{item.Text1}</Typography>\n              </Grid>\n              <Grid item xs={4.5} md={2}>\n                <Typography>{item.Text3}</Typography>\n              </Grid>\n          \n              <Grid item xs={1.5} md={1}>\n                {\n                  !item.IsSubmited && <SendIcon color={'info'}  onClick={() => Submit(item.Id)} />\n                }\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <EditIcon color={'success'} onClick={() => clickEdit(item.Id)} />\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <DeleteIcon  color={'error'} onClick={() => Delete(item.Id)} />\n              </Grid>\n              {/* {Submit1 &&  <Grid item xs={2} md={1}>\n                <ArrowForwardIcon color={'secondary'} onClick={() =>Submit1(item.Id)} />\n              </Grid> } */}\n             \n            </Grid>\n          </Card>\n\n    </div>\n  )\n}\n\nexport default TabulerCard","import React from 'react'\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\nimport TabulerCard from '../Card/TabulerCard'\n\nfunction TabulerList({ ItemList, clickEdit, Submit, Delete ,Submit1=undefined}) {\n    return (\n        <div>\n            {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\n                <>\n                    {ItemList.map((Item, i) => {\n                        return (\n                            <div key={i}>\n                                <TabulerCard item={Item} clickEdit={clickEdit} Submit={Submit} Delete={Delete} Submit1={Submit1}/>\n                            </div>\n                        )\n                    })}\n\n                </>\n            }\n        </div>\n    )\n}\n\nexport default TabulerList","import React from 'react'\nimport { MenuItem ,FormControl ,InputLabel ,Select ,Box ,NativeSelect} from '@mui/material'\nfunction DropDown({itemList, ClickItem , DefaultValue ,Label }) {\n  return (\n    <div>\n    <Box >\n    <FormControl fullWidth>\n        <NativeSelect fullWidth\n                value={DefaultValue}\n                onChange={(e) => ClickItem(e.target.value)}\n                id=\"select\"\n                >\n                {DefaultValue == '' && <option>{Label}</option>}\n                {itemList.map((item, i) => {\n                    return (\n                        <option value={item.Value} key={i}>\n                            {item.Name}\n                        </option>\n                    );\n                })}\n            </NativeSelect>\n        </FormControl>\n    </Box>\n    </div>\n  )\n}\n\nexport default DropDown","import { makeStyles } from '@mui/styles';\n\nexport const Styles = makeStyles({\n    iIconExamSchedule: {\n\n        fontSize: \"20px !important\",\n        marginTop: '10px',\n        backgroundColor: \"#e8a0e7\",\n        borderRadius: \"50px\",\n        marginRight: \"-15px\",\n        '@media (max-width: 280px)': {\n          fontSize: \"15px !important\",\n          marginTop: '10px',\n        },\n      },\n    \n    iIconSupport: {\n\n        fontSize: \"20px !important\",\n    \n    \n    \n        '@media (max-width: 280px)': {\n          fontSize: \"15px !important\",\n          // marginTop: '20px',  \n        },\n      },\n    })","import React, { useState } from 'react';\nimport { ClickAwayListener, IconButton, Typography, Container } from \"@mui/material\";\nimport Tooltip, { TooltipProps } from \"@mui/material/Tooltip\";\nimport { Styles } from 'src/assets/style/CommonStyle';\nimport InfoTwoToneIcon from '@mui/icons-material/InfoTwoTone';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme, Grid, MenuItem, Divider } from '@mui/material';\n\n\nIcon1.propTypes = {\n    Note: PropTypes.string,\n}\n\nfunction Icon1({ Note }) {\n\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => {\n        setOpen((prev) => !prev);\n    };\n\n    const handleClickAway = () => {\n        setOpen(false);\n    };\n    const theme = useTheme();\n\n    const DotLegend = styled('span')(\n        ({ theme }) => `\n          border-radius: 22px;\n          width: ${theme.spacing(1.5)};\n          height: ${theme.spacing(1.5)};\n          display: inline-block;\n          margin-right: ${theme.spacing(1)};\n          margin-top: -${theme.spacing(0.1)};\n      `\n    );\n\n    const classes = Styles();\n\n    return (\n        <>\n            <Container>\n                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 2, marginTop: '-27px' }}>\n                    <Typography variant=\"body2\" fontSize='15px'>\n                        {/* <DotLegend className={classes.Listfont1}\n                            style={{ background: 'darkmagenta', marginLeft: '9px', marginBottom: \"-2px\" }}\n                        /><small><b>Description</b></small> */}\n                        <br />\n                    </Typography> <br />\n                \n                    <ClickAwayListener onClickAway={handleClickAway}>\n\n                        <Tooltip\n                            PopperProps={{\n                                disablePortal: true,\n                            }}\n                            onClose={handleClick}\n                            open={open}\n                            disableFocusListener\n                            disableHoverListener\n                            disableTouchListener\n                            title={Note}\n                            arrow\n                            placement=\"left\"\n                            // alignItem=\"right\"\n\n                            componentsProps={{\n                                tooltip: {\n                                    sx: {\n                                        marginLeft: '70px',\n                                        transform: \"translate3d(20px, 14.5px, 0px) !important\",\n                                        marginTop: '-10px',\n\n                                    }\n                                }\n                            }}\n\n                        >\n\n                            <InfoTwoToneIcon type=\"button\" onClick={handleClick} className={classes.iIconExamSchedule} />\n                        </Tooltip>\n\n\n                    </ClickAwayListener>\n                </Box>\n            </Container>\n        </>\n    );\n}\n\nexport default Icon1;\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { toast } from 'react-toastify';\nimport { getSchoolNoticeList, getSendnotice, resetSendMessage,resetDeleteMessage,getDeleteSchoolNotice } from 'src/requests/AddSchoolNotice/RequestAddSchoolNotice'\nimport { IGetSchoolNoticeListBody, ISendNoticeBody,IDeleteSchoolNoticeBody } from 'src/Interface/AddSchoolNotice/IAddSchoolNotice';\nimport TabulerList from 'src/library/List/TabulerList';\n\n\nfunction AddSchoolNoticeList({ clickEdit }) {\n  const dispatch = useDispatch();\n\n\n  const DeleteSchoolNotice: any = useSelector((state: RootState) => state.AddSchoolNotice.DeleteSchoolNotice);\n  console.log(\" DeleteSchoolNotice\", DeleteSchoolNotice)\n  const GetSend: any = useSelector((state: RootState) => state.AddSchoolNotice.sendNotice);\n  const SchoolNoticeList: any = useSelector((state: RootState) => state.AddSchoolNotice.SchoolNoticeList);\n  console.log(\"SchoolNoticeList\", SchoolNoticeList)\n\n\n  const ClickDelete = (Id) => {\n    if(confirm('Are you sure you want to delete SchoolNotice?')){\n      toast.success (\"Deleted School Notice\" ,{ toastId: 'success1' })\n      const GetDeleteSchoolNoticeBody: IDeleteSchoolNoticeBody = { Id: Id }\n      dispatch(getDeleteSchoolNotice(GetDeleteSchoolNoticeBody));\n    }\n   }\n\n  useEffect(() => {\n    if ( DeleteSchoolNotice !== '') {\n      toast.success ( DeleteSchoolNotice,{ toastId: 'success1' })\n      dispatch(resetDeleteMessage());\n    }\n  }, [ DeleteSchoolNotice])\n\n  const Send = (Id) => {\n    if (confirm('Are you sure you want to Send the Notice?')) {\n      const GetSendNoticeBody: ISendNoticeBody = { Id: Id }\n      dispatch(getSendnotice(GetSendNoticeBody));\n    }\n\n  }\n\n  useEffect(() => {\n    if (GetSend !== '') {\n      toast.success(GetSend, { toastId: 'success1' })\n      dispatch(resetSendMessage());\n    }\n  }, [GetSend])\n\n  \n  \n  \n  useEffect(() => {\n    const GetSchoolNoticeListBody: IGetSchoolNoticeListBody = { ClassId: Number(sessionStorage.getItem(\"ClassId\")) }\n    dispatch(getSchoolNoticeList(GetSchoolNoticeListBody));\n  }, [])\n  \n  return (\n    <div>\n      <TabulerList ItemList={SchoolNoticeList} clickEdit={clickEdit} Submit={Send} Delete={ClickDelete} />\n\n    </div>\n  )\n}\n\nexport default AddSchoolNoticeList","import React, { useState, useEffect, useRef } from 'react'\nimport PageHeader from 'src/library/heading/pageHeader'\nimport { Card, Container, TextField, Box, Button, Typography, Grid } from '@mui/material'\nimport DropDown from 'src/library/DropDown/DropDown'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { getSchoolNoticeList, resetSchoolNoticeMessage, resetSchoolNoticeListForEdit, SchoolNoticeses, getSchoolNoticeListForEdit } from 'src/requests/AddSchoolNotice/RequestAddSchoolNotice';\nimport { IAddSchoolNoticeBody, ISchoolNoticeListForEditBody } from 'src/Interface/AddSchoolNotice/IAddSchoolNotice';\nimport { IGetClassNameListBody } from 'src/Interface/ClassNameList/ICLassNameList';\nimport { StudentDetailsgetClassName } from 'src/requests/ClassNameList/RequestClassNameList'\nimport { toast } from 'react-toastify';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { ChangeFileIntoBase64, CheckFileValidation, IsDateValid, IsFutureDateValid, IsTodayFutureDateValid, getDateFormatted, getInputDateFormatted, getTodayformatDate, toolbarOptions } from '../Common/util';\nimport SuspenseLoader from 'src/layouts/Components/SuspenseLoader';\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\nimport AddSchoolNoticeList from './AddSchoolNoticeList';\nimport { Styles } from 'src/assets/style/CommonStyle';\nimport Icon1 from 'src/library/icon/icon1';\nimport { ButtonPrimary } from 'src/library/StyledComponents/CommonStyled';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction AddSchoolNotice() {\n  const dispatch = useDispatch();\n  const aRef = useRef(null);\n  const classes = Styles();\n  const [Id, setId] = useState(0);\n  const [userId, setUserId] = useState(sessionStorage.getItem(\"UserId\"))\n  const [Title, setTitle] = useState('');\n  const [Titleerror, setTitleerror] = useState('');\n  const [NoticeDescription, setNoticeDescription] = useState('')\n  const [subjectDescription, setSubjectDescription] = useState('')\n  const [selectclass, setSelectClass] = useState(sessionStorage.getItem(\"ClassDivisionId\"));\n  const [selectclasserror, setSelectClasserror] = useState('');\n  const [selectdate, setSelectDate] = useState(getTodayformatDate());\n  const [dateerror, setDateerror] = useState('');\n  const [descriptionerror, setdescriptionerror] = useState('')\n  const [selectdateerror, setSelectdateerror] = useState('')\n  const [ChooseFile, setChooseFile] = useState('');\n  const [fileData, setFileData] = useState();\n  const [Attachment, setAttachment] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [Error, setError] = useState('');\n  const validFiles = ['jpg', 'jpeg', 'png', 'bmp']\n  const [ClassId, setClassId] = useState(0);\n\n\n  const ClassNameList = useSelector((state: RootState) => state.ClassNameList.ClassNameResult);\n  console.log(ClassNameList, \"ClassNameList\")\n\n  const SchoolNotice = useSelector((state: RootState) => state.AddSchoolNotice.SchoolNotice);\n  console.log(SchoolNotice, \"SchoolNotice\");\n\n  const GetEditList: any = useSelector((state: RootState) => state.AddSchoolNotice.EditSchoolNoticeList);\n  console.log(\"GetEditList\", GetEditList)\n\n\n  // const loading = useSelector((state: RootState) => state.AddHomeWork.Loading);\n\n\n  const ClickClassItem = (value) => {\n    setClassId(value);\n  };\n  const changeFile = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      let isValid = CheckFileValidation(e.target.files[0], ['jpg', 'jpeg', 'png', 'bmp', 'pdf'], 2000000)\n      setError(isValid)\n      if (isValid === null) {\n        let base64URL: any = await ChangeFileIntoBase64(e.target.files[0]);\n        setFileData(base64URL.slice(base64URL.indexOf(',') + 1));\n        setFileName(e.target.files[0].name);\n      }\n      else {\n        aRef.current.value = null;\n      }\n    }\n  }\n\n\n  const ClassNameBody: IGetClassNameListBody =\n  {\n    \"Id\": ClassId\n  }\n  useEffect(() => {\n    dispatch(StudentDetailsgetClassName(ClassNameBody))\n  }, [ClassId]);\n\n  const SchoolNoticeDetails: IAddSchoolNoticeBody =\n  {\n    Id: Id,\n    ClassId: ClassId,\n    NoticeName: Title,\n    NoticeDescription: NoticeDescription,\n    AssignDate: selectdate,\n    BinaryData: fileData,\n    AttachmentName: fileName,\n    Attachment: Attachment,\n    UserId: 181\n  }\n\n\n\n  // const ClickItem = (value) => {\n  //   setSelectClass(value);\n  // };\n\n  // const ClickSubjectItem = (value) => {\n  //   setSelectSubject(value);\n  // };\n\n  // useEffect(() => {\n  //   // dispatch(SchoolNoticeses(IGetClassNameListBody));\n  //    dispatch(SchoolNoticeses());\n  // }, [])\n\n  useEffect(() => {\n    if (GetEditList !== null) {\n      setId(GetEditList.Id)\n      setSelectClass(GetEditList.ClassId)\n      setClassId(GetEditList.ClassDivisionId)\n      setSelectDate(getDateFormatted(GetEditList.AssignDate))\n      setTitle(GetEditList.NoticeName)\n      setNoticeDescription(GetEditList.NoticeDescription)\n      if (GetEditList.AttachmentName != null) {\n        setAttachment(GetEditList.Attachment)\n        setFileData(GetEditList.Attachment)\n        setFileName(GetEditList.AttachmentName)\n      }\n      resetError();\n      dispatch(resetSchoolNoticeListForEdit());\n\n    }\n  }, [GetEditList])\n\n  const clickEdit = (Id) => {\n    const GetSchoolNoticeEditBody: ISchoolNoticeListForEditBody = { Id: Id }\n    dispatch(getSchoolNoticeListForEdit(GetSchoolNoticeEditBody));\n  }\n\n  const onAddSchoolNotice = () => {\n    let isValid = true;\n\n    if (NoticeDescription === '') {\n      setdescriptionerror('Field is required1');\n      isValid = false;\n    } else {\n      setdescriptionerror('');\n    }\n\n    // if (IsAssignDateValid(selectdate) !== '') {\n    //   alert('wwwwwhere'+selectdate)\n    //   setSelectdateerror(IsAssignDateValid(selectdate))\n    //     isValid = false;\n    // }\n    if (ClassId === 0) {\n      alert('here')\n      setSelectClasserror('Field is required2');\n      isValid = false;\n    } else {\n      setSelectClasserror('');\n    }\n    alert(isValid)\n    if (isValid) {\n      toast.success(\"School Notice Added Successfully\", { toastId: 'success1' })\n      dispatch(SchoolNoticeses(SchoolNoticeDetails));\n      setNoticeDescription('');\n      setSelectDate(getTodayformatDate());\n      setFileData(null);\n      setFileName('');\n      aRef.current.value = \"\"\n    }\n\n  };\n\n  const resetError = () => {\n    setdescriptionerror('');\n    setSelectdateerror('');\n    setSelectClasserror('');\n  }\n  useEffect(() => {\n    if (SchoolNotice !== '') {\n      toast.success(ClassNameList, { toastId: 'success1' })\n      dispatch(resetSchoolNoticeMessage());\n    }\n  }, [ClassNameList])\n\n  // const IsAssignDateValid = (value) => {\n  //   let msg = IsDateValid(value);\n  //   if (msg === '')\n  //     msg = IsTodayFutureDateValid(value);\n  //   return msg\n  // }\n  return (\n    <Container>\n            <Card>\n        {/* <DropDown itemList={GetHomeWork} ClickItem={ClickItem} DefaultValue={selectclass} Label={'Select Class'} />  */}\n        <Typography variant='h3' color={'success'} >\n\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <h3> School Notice </h3>\n          </div>\n        </Typography>\n        <ErrorMessageForm error={selectclasserror} />\n        <br></br>\n        {<DropDown itemList={ClassNameList} ClickItem={ClickClassItem} DefaultValue={ClassId} Label={'Select Class'} />}\n        <br></br>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField label={\"Title:\"} value={Title}\n              onChange={(e) => setTitle(e.target.value)}\n              variant=\"standard\" error={Titleerror !== ''}\n              helperText={Titleerror} > </TextField>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField type='date' label={\"Date\"} value={selectdate} focused onChange={(e) => { setSelectDate(e.target.value) }}\n             /><br></br>\n          </Grid>\n        </Grid>\n        <ReactQuill value={NoticeDescription} modules={toolbarOptions}\n          onChange={(value) => setNoticeDescription(value)} />\n        <ErrorMessageForm error={descriptionerror} />\n        <Box mt={2}>\n          <input type=\"file\" ref={aRef} onChange={changeFile} ></input>\n        </Box>\n        {fileName}\n        <Box className={classes.iIconSupport}>\n          <Icon1 Note={\"Supports only \" + validFiles.join(', ') + \" files types up to 5 MB\"} />\n        </Box>\n        {Error && <ErrorMessageForm error={Error} />}\n        <Grid container>\n          <Grid item xs={12} md={3} sx={{ float: \"right\" }}>\n\n            <ButtonPrimary onClick={onAddSchoolNotice} >Send&nbsp;<SendIcon fontSize=\"small\" /></ButtonPrimary>\n          </Grid>\n        </Grid>\n\n      </Card>\n      <br></br>\n      {\n\n        <AddSchoolNoticeList clickEdit={clickEdit} />\n      }\n\n    </Container >\n\n  )\n}\n\nexport default AddSchoolNotice"],"sourceRoot":""}