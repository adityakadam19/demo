{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/ErrorMessage/ErrorMessageForm.tsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/Login/Login.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","ErrorMessageForm","error","_jsx","children","sx","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","concat","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","name","overridesResolver","props","styles","container","item","lg","md","sm","xl","xs","zeroMinWidth","ownerState","root","_ref4","_extends","boxSizing","display","flexWrap","width","margin","minWidth","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","_ref3","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","_ref5","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","ref","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","classes","slots","composeClasses","useUtilityClasses","element","clsx","as","Provider","value","Login","dispatch","useDispatch","username","setUserName","useState","usernameError","setUserNameError","password","setPassword","passworderror","setPassworderror","navigate","useNavigate","GetUserLogin","useSelector","state","UserLogin","UserLoginBody","EmailIdOrPhone","LoginPassword","useEffect","localStorage","getItem","setSession","JSON","NavigateByRole","UserRoleId","toast","toastId","setItem","stringify","resetUserLogin","sessionStorage","UserId","ClassId","UserName","ClassDivisionName","ClassDivisionId","EmailId","BirthDate","PhoneNo","emailRegExp","phoneRegExp","Container","_jsxs","alignItems","mt","justifyContent","src","style","alignContent","TextField","onChange","e","target","label","type","onClick","onSubmit","isError","test"],"mappings":"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","file":"static/js/8.4eb26550.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessageForm({error}) {\n  return (\n    <div>\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessageForm","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import React, { useState } from 'react'\nimport {  Grid, TextField } from '@mui/material';\nimport { UserLogin, resetUserLogin } from 'src/requests/Admin/RequestUserLogin';\nimport { IUserLoginBody } from 'src/Interface/Admin/IUserLogin';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\nimport { Container } from '@mui/material';\nimport { ButtonPrimary } from 'src/library/StyledComponents/CommonStyled';\nfunction Login() {\n  const dispatch = useDispatch();\n  const [username, setUserName] = useState('');\n  const [usernameError, setUserNameError] = useState('');\n  const [password, setPassword] = useState('');\n  const [passworderror, setPassworderror] = useState('')\n  const navigate = useNavigate();\n\n  const GetUserLogin: any = useSelector(\n    (state: RootState) => state.UserLogin.UserLogin\n  );\n\n\n  const UserLoginBody: IUserLoginBody =\n  {\n    EmailIdOrPhone: username,\n    LoginPassword: password\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\") !== null) {\n      setSession(JSON.parse(localStorage.getItem(\"auth\")));\n      NavigateByRole();\n    }\n    else\n      if (GetUserLogin !== null) {\n        if (GetUserLogin.UserRoleId === 0)\n          toast.error(\"UserId and or Password is incorrect\", { toastId: 'success1' })\n        else {\n          localStorage.setItem(\"auth\", JSON.stringify(GetUserLogin));\n          setSession(GetUserLogin);\n          // setSession()\n          dispatch(resetUserLogin());\n          NavigateByRole();\n        }\n      }\n}, [GetUserLogin])\n\n  const NavigateByRole = () => {\n    if (sessionStorage.getItem(\"UserRoleId\") === \"3\")\n      navigate('/extended-sidebar/Student/HomeWork');\n    else if (sessionStorage.getItem(\"UserRoleId\") === \"2\")\n      navigate('/extended-sidebar/Student/AddHomeWork');\n    else if (sessionStorage.getItem(\"UserRoleId\") === \"1\")\n      navigate('/extended-sidebar/Student/StudentDetails');\n    else\n      navigate('/extended-sidebar/Student/AddPhoto');\n  }\n  const setSession = (GetUserLogin) => {\n    sessionStorage.setItem(\"UserId\", GetUserLogin.UserId)\n    sessionStorage.setItem(\"UserRoleId\", GetUserLogin.UserRoleId)\n    sessionStorage.setItem(\"ClassId\", GetUserLogin.ClassId)\n    sessionStorage.setItem(\"UserName\", GetUserLogin.UserName)\n    sessionStorage.setItem(\"ClassDivisionName\", GetUserLogin.ClassDivisionName)\n    sessionStorage.setItem(\"ClassDivisionId\", GetUserLogin.ClassDivisionId)\n    sessionStorage.setItem(\"EmailId\", GetUserLogin.EmailId)\n    sessionStorage.setItem(\"BirthDate\", GetUserLogin.BirthDate)\n    sessionStorage.setItem(\"PhoneNo\", GetUserLogin.PhoneNo)\n  }\n\n  const emailRegExp = /^\\S+@\\S+\\.\\S+$/;\n  const phoneRegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n  const onSubmit = () => {\n    let isError = false;\n    if (password === '') {\n      setPassworderror(\"Password is Required\")\n      isError = true\n    } else {\n      setPassworderror('')\n    }\n\n    if (username === '') {\n      setUserNameError(\"Username is Required\")\n      isError = true\n    }\n    else if (!emailRegExp.test(username) && !phoneRegExp.test(username)) {\n      setUserNameError('Invalid email address or Phone number');\n      isError = true\n    }\n    else {\n      setUserNameError('')\n\n    }\n    if (!isError)\n      dispatch(UserLogin(UserLoginBody));\n\n  }\n\n\n\n  return (\n    <Container maxWidth={'xs'} >\n      <Grid container   alignItems=\"center\" >\n      <Grid item xs={12} sx={{ mt: \"30px\" }} display={'flex'}  justifyContent={'center'}>\n        <img src='/images/SmartKidz_logo.png' style={{ width: 200 }} />\n      </Grid>\n    \n      <Grid item xs={12} alignContent={'center'} >\n      <TextField value={username} onChange={(e) => {setUserName(e.target.value) }}\n        label={'username'} />\n\n      <TextField type='password' value={password} onChange={(e) => {setPassword(e.target.value) }}\n        label={'password'} />\n      <ErrorMessageForm error={passworderror} />\n      </Grid>\n      <Grid item xs={12} alignContent={'center'} mt={1} >\n\n      <ButtonPrimary onClick={onSubmit} >Login</ButtonPrimary>\n      </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Login"],"sourceRoot":""}