{"version":3,"sources":["library/ErrorMessage/ErrorMessage.tsx","library/Card/TabulerCard.tsx","library/List/TabulerList.tsx","components/AddSchoolNotice/AddSchoolNoticeList.tsx"],"names":["ErrorMessage","_ref","error","_jsx","children","Typography","sx","textAlign","color","TabulerCard","item","clickEdit","Submit","Delete","Submit1","isMobile","setIsMobile","useState","window","addEventListener","handleResize","innerWidth","Card","mb","_jsxs","Grid","container","style","display","alignItems","Hidden","mdDown","Tooltip","title","Text2","placement","px","overflow","whiteSpace","textOverflow","width","xs","md","Text1","Text3","IsSubmited","SendIcon","onClick","Id","EditIcon","DeleteIcon","TabulerList","ItemList","length","_Fragment","map","Item","i","AddSchoolNoticeList","dispatch","useDispatch","DeleteSchoolNotice","useSelector","state","AddSchoolNotice","console","log","GetSend","sendNotice","SchoolNoticeList","useEffect","toast","success","toastId","resetDeleteMessage","resetSendMessage","GetSchoolNoticeListBody","ClassId","Number","sessionStorage","getItem","getSchoolNoticeList","confirm","GetSendNoticeBody","getSendnotice","GetDeleteSchoolNoticeBody","getDeleteSchoolNotice"],"mappings":"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","file":"static/js/32.2648c7f2.chunk.js","sourcesContent":["import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessage({error}) {\n  return (\n    <div>\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessage","import { Card, Grid, Hidden, Tooltip, Typography } from '@mui/material'\nimport React,{useState} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SendIcon from '@mui/icons-material/Send';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nfunction TabulerCard({item ,clickEdit ,Submit ,Delete ,Submit1=undefined}) {\n  const [isMobile, setIsMobile] = useState(false)\n\n  const handleResize = () => {\n\n      if (window.innerWidth < 900) {\n          setIsMobile(true)\n      } else {\n          setIsMobile(false)\n      }\n  }\n  window.addEventListener('resize', handleResize)\n  return (\n    <div>\n          <Card sx={{ mb: 1 }}  >\n            <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Hidden mdDown>\n              <Tooltip title={item.Text2} placement=\"left-start\">\n           <Typography px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}>{item.Text2}</Typography>\n           {/* <Typography dangerouslySetInnerHTML={{ __html: item.Text2 }} px={3} sx={{overflow:\"hidden\" ,whiteSpace:\"nowrap\" ,textOverflow:\"ellipsis\", width:\"300px\"}}></Typography> */}\n            </Tooltip>\n          \n              </Hidden>\n          \n              <Grid item xs={3} md={2}>\n                <Typography>{item.Text1}</Typography>\n              </Grid>\n              <Grid item xs={4.5} md={2}>\n                <Typography>{item.Text3}</Typography>\n              </Grid>\n          \n              <Grid item xs={1.5} md={1}>\n                {\n                  !item.IsSubmited && <SendIcon color={'info'}  onClick={() => Submit(item.Id)} />\n                }\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <EditIcon color={'success'} onClick={() => clickEdit(item.Id)} />\n              </Grid>\n              <Grid item xs={1.5} md={1}>\n                <DeleteIcon  color={'error'} onClick={() => Delete(item.Id)} />\n              </Grid>\n              {/* {Submit1 &&  <Grid item xs={2} md={1}>\n                <ArrowForwardIcon color={'secondary'} onClick={() =>Submit1(item.Id)} />\n              </Grid> } */}\n             \n            </Grid>\n          </Card>\n\n    </div>\n  )\n}\n\nexport default TabulerCard","import React from 'react'\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\nimport TabulerCard from '../Card/TabulerCard'\n\nfunction TabulerList({ ItemList, clickEdit, Submit, Delete ,Submit1=undefined}) {\n    return (\n        <div>\n            {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\n                <>\n                    {ItemList.map((Item, i) => {\n                        return (\n                            <div key={i}>\n                                <TabulerCard item={Item} clickEdit={clickEdit} Submit={Submit} Delete={Delete} Submit1={Submit1}/>\n                            </div>\n                        )\n                    })}\n\n                </>\n            }\n        </div>\n    )\n}\n\nexport default TabulerList","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { toast } from 'react-toastify';\nimport { getSchoolNoticeList, getSendnotice, resetSendMessage,resetDeleteMessage,getDeleteSchoolNotice } from 'src/requests/AddSchoolNotice/RequestAddSchoolNotice'\nimport { IGetSchoolNoticeListBody, ISendNoticeBody,IDeleteSchoolNoticeBody } from 'src/Interface/AddSchoolNotice/IAddSchoolNotice';\nimport TabulerList from 'src/library/List/TabulerList';\n\n\nfunction AddSchoolNoticeList({ clickEdit }) {\n  const dispatch = useDispatch();\n\n\n  const DeleteSchoolNotice: any = useSelector((state: RootState) => state.AddSchoolNotice.DeleteSchoolNotice);\n  console.log(\" DeleteSchoolNotice\", DeleteSchoolNotice)\n  const GetSend: any = useSelector((state: RootState) => state.AddSchoolNotice.sendNotice);\n  const SchoolNoticeList: any = useSelector((state: RootState) => state.AddSchoolNotice.SchoolNoticeList);\n  console.log(\"SchoolNoticeList\", SchoolNoticeList)\n\n\n  const ClickDelete = (Id) => {\n    if(confirm('Are you sure you want to delete SchoolNotice?')){\n      toast.success (\"Deleted School Notice\" ,{ toastId: 'success1' })\n      const GetDeleteSchoolNoticeBody: IDeleteSchoolNoticeBody = { Id: Id }\n      dispatch(getDeleteSchoolNotice(GetDeleteSchoolNoticeBody));\n    }\n   }\n\n  useEffect(() => {\n    if ( DeleteSchoolNotice !== '') {\n      toast.success ( DeleteSchoolNotice,{ toastId: 'success1' })\n      dispatch(resetDeleteMessage());\n    }\n  }, [ DeleteSchoolNotice])\n\n  const Send = (Id) => {\n    if (confirm('Are you sure you want to Send the Notice?')) {\n      const GetSendNoticeBody: ISendNoticeBody = { Id: Id }\n      dispatch(getSendnotice(GetSendNoticeBody));\n    }\n\n  }\n\n  useEffect(() => {\n    if (GetSend !== '') {\n      toast.success(GetSend, { toastId: 'success1' })\n      dispatch(resetSendMessage());\n    }\n  }, [GetSend])\n\n  \n  \n  \n  useEffect(() => {\n    const GetSchoolNoticeListBody: IGetSchoolNoticeListBody = { ClassId: Number(sessionStorage.getItem(\"ClassId\")) }\n    dispatch(getSchoolNoticeList(GetSchoolNoticeListBody));\n  }, [])\n  \n  return (\n    <div>\n      <TabulerList ItemList={SchoolNoticeList} clickEdit={clickEdit} Submit={Send} Delete={ClickDelete} />\n\n    </div>\n  )\n}\n\nexport default AddSchoolNoticeList"],"sourceRoot":""}