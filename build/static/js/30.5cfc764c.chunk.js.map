{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","library/ErrorMessage/ErrorMessageForm.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","components/AddAdmissionStudentDetails/AdmissionStudentDetails.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","RootWrapper","concat","spacing","PageHeader","heading","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","_jsx","Container","children","display","alignItems","ErrorMessageForm","error","sx","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","AdmissionStudentDetails","dispatch","useDispatch","StudentDetails","useSelector","state","AddStudentDetail","console","log","GetStudentDetail","GetStudentDetails","studentName","setStudentName","useState","studentNameerror","setStudentNameerror","birthDate","setBirthDate","birthDateerror","setBirthDateerror","age","setAge","ageerror","setAgeerror","fatherName","setFatherName","fatherNameerror","setFatherNameerror","phoneNo","setPhoneNo","phoneNoerror","setPhoneNoerror","motherName","setMotherName","motherNameerror","setMotherNameerror","phoneNo2","setPhoneNo2","phoneNoerror2","setPhoneNoerror2","societyName","setSocietyName","societyNameerror","setSocietyNameerror","studentAddress","setStudentAddress","studentAddresserror","setStudentAddresserror","email","setEmail","emailerror","setEmailerror","Id","setId","schoolListerror","setSchoolListError","ItemList","setItemList","AddStudentDetailsBody","ClassId","getClassId","classId","map","item","IsActive","parseInt","Value","toString","StudentName","BirthDate","Age","FatherName","PhoneNo","MotherName","PhoneNo2","SocietyName","StudentAddress","Emailid","GetStudentDetailsBody","useEffect","AddStudentDetails","ResetForm","prev","_jsxs","TextField","value","onChange","e","target","label","type","currentDate","Date","isNaN","parse","current","getFullYear","onBirthDateChange","focused","input","test","length","handleChange","ChangephoneNo","onBlur","IsMobileNoValid","helperText","ChangephoneNo2","onClick","onSubmit","isError","IsSelected","returnVal"],"mappings":"qTAEO,MAAMA,EAAcC,YAAOC,IAAPD,EAAoBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,2RAgB5CE,EAAeJ,YAAOK,IAAPL,CAAWM,MAAAC,YAAA,iVAqB1BC,EAAgBR,YAAOS,IAAPT,EAC3BU,IAAA,IAAC,MAAEP,EAAK,MAAEQ,GAAOD,EAAA,uN,iCCtCnB,6DAQA,MAAME,EAAcZ,YAAOK,IAAPL,EAClBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,+BAAAW,OACUV,EAAMW,QAAQ,GAAE,8BAAAD,OACbV,EAAMW,QAAQ,GAAE,UAyB1BC,IArByBL,IAAiB,IAAhB,QAAEM,GAAQN,EACnCO,cAAd,MAEMC,EAAWC,cAKjB,OAJyC,OAArCC,eAAeC,QAAQ,gBACYC,IAArCF,eAAeC,QAAQ,WACvBH,EAAS,KAGTK,cAACC,IAAS,CAAAC,SACRF,cAACX,EAAW,CAACc,QAAQ,OAAOC,WAAW,SAAQF,SAC/CF,cAACxB,IAAY,CAAA0B,SAAGT,U,iCC5BtB,2BAWeY,IARf,SAAyB1B,GAAW,IAAV,MAAC2B,GAAM3B,EAC/B,OACEqB,cAAA,OAAAE,SACEF,cAACtB,IAAU,CAAC6B,GAAI,CAAEnB,MAAM,OAAOc,SAAEI,Q,2HCLhC,SAASE,EAAoBC,GAClC,OAAOC,YAAqB,UAAWD,GAErBE,YAAuB,UAAW,CAAC,SACxCC,I,OCHf,MAAMC,EAAY,CAAC,YAAa,UAsB1BC,EAAWrC,YAAOsC,IAAO,CAC7BC,KAAM,UACNP,KAAM,OACNQ,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH9B3C,EAId,KACM,CACL4C,SAAU,aAGRC,EAAoBC,cAAiB,SAAcC,EAASC,GAChE,MAAMP,EAAQQ,YAAc,CAC1BR,MAAOM,EACPR,KAAM,aAGF,UACJW,EAAS,OACTC,GAAS,GACPV,EACEW,EAAQC,YAA8BZ,EAAOL,GAE7CkB,EAAaC,YAAS,GAAId,EAAO,CACrCU,WAGIK,EAnCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,YAHO,CACZd,KAAM,CAAC,SAEoBZ,EAAqByB,IA4BlCE,CAAkBJ,GAClC,OAAoB/B,cAAKc,EAAUkB,YAAS,CAC1CL,UAAWS,YAAKH,EAAQb,KAAMO,GAC9BU,UAAWT,EAAS,OAAI7B,EACxB0B,IAAKA,EACLM,WAAYA,GACXF,OA0CUP,O,iCChGf,uGA6RegB,UAlRiBA,KAC9B,MAAMC,EAAWC,cACXC,EAAiBC,aACpBC,GAAqBA,EAAMC,iBAAiBH,iBAE/CI,QAAQC,IAAIL,EAAgB,kBAG5B,MAAMM,EAAmBL,aACpBC,GAAqBA,EAAMC,iBAAiBI,oBAE/CH,QAAQC,IAAIC,EAAkB,oBAElC,MAAOE,EAAaC,GAAkBC,mBAAS,KACtCC,EAAkBC,GAAuBF,mBAAS,KAClDG,EAAWC,GAAgBJ,mBAAS,KACpCK,EAAgBC,GAAqBN,mBAAS,KAC9CO,EAAKC,GAAUR,mBAAS,KACxBS,EAAUC,GAAeV,mBAAS,KAClCW,EAAYC,GAAiBZ,mBAAS,KACtCa,EAAiBC,GAAsBd,mBAAS,KAChDe,EAASC,GAAchB,mBAAS,KAChCiB,EAAcC,GAAmBlB,mBAAS,KAC1CmB,EAAYC,GAAiBpB,mBAAS,KACtCqB,EAAiBC,GAAsBtB,mBAAS,KAChDuB,EAAUC,GAAexB,mBAAS,KAClCyB,EAAeC,GAAoB1B,mBAAS,KAC5C2B,EAAaC,GAAkB5B,mBAAS,KACxC6B,EAAkBC,GAAuB9B,mBAAS,KAClD+B,EAAgBC,GAAqBhC,mBAAS,KAC9CiC,EAAqBC,GAA0BlC,mBAAS,KACxDmC,EAAOC,GAAYpC,mBAAS,KAC5BqC,EAAYC,GAAiBtC,mBAAS,KACtCuC,GAAIC,IAASxC,mBAAS,IACvByC,GAAgBC,IAAoB1C,mBAAS,KAC5C2C,GAAUC,IAAe5C,mBAAS,IAoBnC6C,GACN,CACEN,GAAIA,GACJO,QArBiBC,MACjB,IAAIC,EAAU,EAKd,OAJAL,GAASM,KAAKC,IACTA,EAAKC,WACNH,EAASI,SAASF,EAAKG,WAEpBL,GAeED,GAAaO,WACtBC,YAAYzD,EACZ0D,UAAUrD,EACVsD,IAAIL,SAAS7C,GACbmD,WAAW/C,EACXgD,QAAQ5C,EACR6C,WAAYzC,EACZ0C,SAAUtC,EACVuC,YAAanC,EACboC,eAAgBhC,EAChBiC,QAAS7B,GAIL8B,GACN,CACI,GAAM,KAEVC,qBAAU,KACR9E,EAAS+E,YAAkBtB,OAC3B,IAEFqB,qBAAU,KACR9E,EAASS,YAAkBoE,OAC3B,IAEF,MAiEMG,GAAYA,KAChBrE,EAAe,IACfK,EAAa,IACbI,EAAO,IACPI,EAAc,IACdI,EAAW,IACXI,EAAc,IACdI,EAAY,IACZI,EAAe,IACfI,EAAkB,IAClBI,EAAS,IAETQ,IAAYyB,GAAOA,EAAKpB,KAAKC,IACrB,IAAIA,EAAKC,UAAS,SAqDxB,OACMmB,eAACxH,IAAS,CAAAC,SAAA,CACRF,cAACR,IAAU,CAACC,QAAS,iBAGpBO,cAACK,IAAgB,CAACC,MAAOsF,KACvB5F,cAAA,SACHyH,eAACnG,IAAI,CAAApB,SAAA,CAEFF,cAAC0H,IAAS,CAACC,MAAO1E,EAAa2E,SAAWC,IAAQ3E,EAAe2E,EAAEC,OAAOH,QAAUI,MAAO,gBAE3F/H,cAACK,IAAgB,CAACC,MAAO8C,IACzBpD,cAAC0H,IAAS,CAACC,MAAOrE,EAAW0E,KAAK,OAAOJ,SAAWC,IAvBxCF,KACrBpE,EAAaoE,GACb,MAAMM,EAAc,IAAIC,KACxB,GAAIC,MAAMD,KAAKE,MAAM9E,IAIvBK,EAAO,QAJ4B,CACjC,MAAM0E,EAAU,IAAIH,KAAKP,GACzBhE,GAAQsE,EAAYK,cAAgBD,EAAQC,eAAe7B,cAkBS8B,CAAkBV,EAAEC,OAAOH,QAAUI,MAAO,aAAcS,SAAO,IAE5HxI,cAACK,IAAgB,CAACC,MAAOkD,IAC1BxD,cAAC0H,IAAS,CAACC,MAAOjE,EAAKsE,KAAK,OAC1BJ,SAAWC,GAjELA,KAChB,MAAMY,EAAQZ,EAAEC,OAAOH,OAET,KAAVc,GADU,aACaC,KAAKD,IAAUA,EAAME,QAAU,IACxDhF,EAAO8E,IA6DkBG,CAAaf,GAC9BE,MAAO,QAET/H,cAACK,IAAgB,CAACC,MAAOsD,IACzB5D,cAAC0H,IAAS,CAACC,MAAO7D,EAAY8D,SAAWC,IAAQ9D,EAAc8D,EAAEC,OAAOH,QAAUI,MAAO,eAEzF/H,cAACK,IAAgB,CAACC,MAAO0D,IACzBhE,cAAC0H,IAAS,CAACC,MAAOzD,EAChB8D,KAAK,OACLJ,SAAWC,GAlEJA,KAErB,MAAMY,EAAQZ,EAAEC,OAAOH,OAET,KAAVc,GADU,aACaC,KAAKD,IAAUA,EAAME,QAAU,KACxDxE,EAAWsE,IA6DkBI,CAAchB,GAC/BiB,OAASjB,IAAQxD,EAAgB0E,YAAgBlB,EAAEC,OAAOH,SAC1DrH,MAAwB,KAAjB8D,EACP4E,WAAY5E,EACZ2D,MAAO,YACT/H,cAAC0H,IAAS,CAACC,MAAOrD,EAAYsD,SAAWC,IAAQtD,EAAcsD,EAAEC,OAAOH,QAAUI,MAAO,eACzF/H,cAACK,IAAgB,CAACC,MAAOkE,IACzBxE,cAAC0H,IAAS,CAACC,MAAOjD,EAAUkD,SAAWC,GA/D7BA,KACtB,MAAMY,EAAQZ,EAAEC,OAAOH,OAET,KAAVc,GADU,aACaC,KAAKD,IAAUA,EAAME,QAAU,KACxDhE,EAAY8D,IA2D2CQ,CAAepB,GAAIiB,OAASjB,IAAQhD,EAAiBkE,YAAgBlB,EAAEC,OAAOH,SACzHrH,MAAyB,KAAlBsE,EACPoE,WAAYpE,EACZmD,MAAO,aACT/H,cAAC0H,IAAS,CAACC,MAAO7C,EAAa8C,SAAWC,IAAQ9C,EAAe8C,EAAEC,OAAOH,QAAUI,MAAO,gBAC3F/H,cAACK,IAAgB,CAACC,MAAO0E,IACzBhF,cAAC0H,IAAS,CAACC,MAAOzC,EAAgB0C,SAAWC,IAAQ1C,EAAkB0C,EAAEC,OAAOH,QAAUI,MAAO,mBACjG/H,cAACK,IAAgB,CAACC,MAAO8E,IAKjCpF,cAAC0H,IAAS,CAACC,MAAOrC,EAChBsC,SAAWC,IAAOtC,EAASsC,EAAEC,OAAOH,QACpCmB,OAASjB,IApEd,IAAsBF,EAoEDlC,GApECkC,EAoE0BE,EAAEC,OAAOH,OAnEpC,8CAIEe,KAAKf,GAGpB,GAFI,wBAHA,kCAkEPrH,MAAsB,KAAfkF,EACPwD,WAAYxD,EACZuC,MAAO,YAED/H,cAACd,IAAM,CAACgK,QAtLLC,KACf,IAAIC,GAAU,EACM,KAAhBnG,GACFI,EAAoB,0BACpB+F,GAAU,GAEV/F,EAAoB,IAEJ,KAAdC,GACFG,EAAkB,0BAClB2F,GAAU,GAGV3F,EAAkB,IAER,KAARC,GACFG,EAAY,0BACZuF,GAAU,GAEVvF,EAAY,IAEK,KAAfC,GACFG,EAAmB,0BACnBmF,GAAU,GAEVnF,EAAmB,IAEF,KAAfK,GACFG,EAAmB,0BACnB2E,GAAU,GAEV3E,EAAmB,IAED,KAAhBK,GACFG,EAAoB,0BACpBmE,GAAU,GAEVnE,EAAoB,IAGC,KAAnBC,GACFG,EAAuB,0BACvB+D,GAAU,GAEV/D,EAAuB,IAnFVgE,MACf,IAAIC,GAAY,EAMhB,OALAxD,GAASM,KAAKC,IACTA,EAAKC,WACNgD,GAAY,MAGTA,GA+EHD,GAKFxD,GAAmB,KAJnBA,GAAmB,4BACnBuD,GAAU,GAKPA,GACH7G,EAAS+E,YAAkBtB,KAIxBoD,GACH7B,MA0HoCrH,SAAC,cAE7BF,cAAA","file":"static/js/30.5cfc764c.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\nimport { useNavigate } from 'react-router';\n\ninterface PageHeaderProps {\n  heading: string;\n}\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(2)};\n        margin-bottom: ${theme.spacing(2)};\n`\n);\n\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n  if (sessionStorage.getItem(\"UserId\") === null ||\n    sessionStorage.getItem(\"UserId\") === undefined) {\n    navigate('/')\n  }\n  return (\n    <Container>\n      <RootWrapper display=\"flex\" alignItems=\"center\">\n      <HeadingStyle>{(heading)}</HeadingStyle>\n       </RootWrapper>\n    </Container>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n};\n\nexport default PageHeader;","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessageForm({error}) {\n  return (\n    <div>\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessageForm","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { RootState } from 'src/store';\nimport  { useEffect,useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport { TextField,Button,Container,Card } from '@mui/material';\nimport { IsEmailValid, IsMobileNoValid } from \"src/components/Common/util\"\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\nimport PageHeader from 'src/library/heading/pageHeader';\nimport { IAddStudentDetailsBody,IGetStudentDetailsBody,IGetStudentDetailsResult} from 'src/Interface/AddStudentDetails/IAddStudentDetails';\nimport { AddStudentDetails,GetStudentDetails } from 'src/requests/AddStudentDetails/RequestAddStudentDetails';\n\nconst AdmissionStudentDetails = () => {\n  const dispatch = useDispatch();\n  const StudentDetails = useSelector(\n    (state: RootState) => state.AddStudentDetail.StudentDetails\n  );\n  console.log(StudentDetails, \"StudentDetails\")\n\n\n  const GetStudentDetail = useSelector(\n      (state: RootState) => state.AddStudentDetail.GetStudentDetails\n    );\n    console.log(GetStudentDetail, \"GetStudentDetail\")\n\nconst [studentName, setStudentName] = useState('');\n  const [studentNameerror, setStudentNameerror] = useState('');\n  const [birthDate, setBirthDate] = useState('');\n  const [birthDateerror, setBirthDateerror] = useState('');\n  const [age, setAge] = useState('');\n  const [ageerror, setAgeerror] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [fatherNameerror, setFatherNameerror] = useState('');\n  const [phoneNo, setPhoneNo] = useState('');\n  const [phoneNoerror, setPhoneNoerror] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [motherNameerror, setMotherNameerror] = useState('');\n  const [phoneNo2, setPhoneNo2] = useState('');\n  const [phoneNoerror2, setPhoneNoerror2] = useState('');\n  const [societyName, setSocietyName] = useState('');\n  const [societyNameerror, setSocietyNameerror] = useState('');\n  const [studentAddress, setStudentAddress] = useState('');\n  const [studentAddresserror, setStudentAddresserror] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailerror, setEmailerror] = useState('');\n  const [Id, setId] = useState(0);\n  const[schoolListerror,setSchoolListError]=useState('')\n  const [ItemList, setItemList] = useState([])\n\n  const getClassId = ()=>{\n    let classId = 0;\n    ItemList.map((item) => {\n      if(item.IsActive)\n        classId= parseInt(item.Value) \n    })\n    return classId\n  }\nconst IsSelected = () => {\n    let returnVal = false;\n    ItemList.map((item)=>{\n      if(item.IsActive){\n        returnVal = true\n      }\n    })\n    return returnVal;\n  }\n \n  const AddStudentDetailsBody: IAddStudentDetailsBody =\n  {\n    Id: Id,\n    ClassId: getClassId().toString(),\n    StudentName:studentName,\n    BirthDate:birthDate,\n    Age:parseInt(age),\n    FatherName:fatherName,\n    PhoneNo:phoneNo,\n    MotherName: motherName,\n    PhoneNo2: phoneNo2,\n    SocietyName: societyName,\n    StudentAddress: studentAddress,\n    Emailid: email,\n    \n  }\n\n  const GetStudentDetailsBody:IGetStudentDetailsBody=\n  {\n      \"Id\": 145\n  }\n  useEffect(()=>{\n    dispatch(AddStudentDetails(AddStudentDetailsBody));\n  },[]);\n\n  useEffect(()=>{\n    dispatch(GetStudentDetails(GetStudentDetailsBody));\n  },[]);\n  \n  const onSubmit = () => {\n    let isError = false\n    if (studentName === '') {\n      setStudentNameerror('This field is required')\n      isError = true\n    } else {\n      setStudentNameerror('')\n    }\n    if (birthDate === '') {\n      setBirthDateerror('This field is required')\n      isError = true\n\n    } else {\n      setBirthDateerror('')\n    }\n    if (age === '') {\n      setAgeerror('This field is required')\n      isError = true\n    } else {\n      setAgeerror('')\n    }\n    if (fatherName === '') {\n      setFatherNameerror('This field is required')\n      isError = true\n    } else {\n      setFatherNameerror('')\n    }\n    if (motherName === '') {\n      setMotherNameerror('This field is required')\n      isError = true\n    } else {\n      setMotherNameerror('')\n    }\n    if (societyName === '') {\n      setSocietyNameerror('This field is required')\n      isError = true\n    } else {\n      setSocietyNameerror('')\n    }\n\n    if (studentAddress === '') {\n      setStudentAddresserror('This field is required')\n      isError = true\n    } else {\n      setStudentAddresserror('')\n\n    }\n    if(!IsSelected()){\n      setSchoolListError('Fill the Mandatory Field')\n      isError = true\n    }\n    else {\n      setSchoolListError('')\n    }\n    if (!isError) {\n      dispatch(AddStudentDetails(AddStudentDetailsBody));\n\n      \n    }\n    if (!isError) {\n      ResetForm()\n    }\n\n  }\n\n  const ResetForm = () => {\n    setStudentName('')\n    setBirthDate('')\n    setAge('')\n    setFatherName('')\n    setPhoneNo('')\n    setMotherName('')\n    setPhoneNo2('')\n    setSocietyName('')\n    setStudentAddress('')\n    setEmail('')\n    //setChecked(false)\n    setItemList(prev=> prev.map((item)=> \n    {return {...item,IsActive:false}}))\n\n  }\n\n  const handleChange = (e) => {\n        const input = e.target.value;\n        const regex = /^[0-9\\b]+$/;\n        if (input === \"\" || (regex.test(input) && input.length <= 2)) {\n          setAge(input);\n        }\n      };\n  \n  const ChangephoneNo = (e) => {\n    // const input=e.target.value;\n    const input = e.target.value;\n    const regex = /^[0-9\\b]+$/;\n    if (input === \"\" || (regex.test(input) && input.length <= 10)) {\n      setPhoneNo(input);\n    }\n    // setPhoneNumber(checkIsNumber(e.target.value))\n  };\n\n  const ChangephoneNo2 = (e) => {\n    const input = e.target.value;\n    const regex = /^[0-9\\b]+$/;\n    if (input === \"\" || (regex.test(input) && input.length <= 10)) {\n      setPhoneNo2(input);\n    }\n  };\n\n  \n     function IsEmailValid(value) {\n      const emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{1,3})+$/;\n      if (!value) {\n          return 'Email Id should not be blank.';\n      }\n      else if (!emailRegExp.test(value)) {\n          return 'Invalid email address';\n      }\n      return ''\n  }\n\n  const onBirthDateChange = (value) => {\n        setBirthDate(value)\n        const currentDate = new Date();\n        if(!isNaN(Date.parse(birthDate))){\n        const current = new Date(value);\n        setAge((currentDate.getFullYear() - current.getFullYear()).toString());\n      }else\n      setAge('')\n      }\n\n\n      return (\n            <Container>\n              <PageHeader heading={'Enquiry Form'} />\n              {/* <Typography>Selected Class</Typography> */}\n             \n               <ErrorMessageForm error={schoolListerror}/>\n                 <br></br>\n              <Card>\n         \n                 <TextField value={studentName} onChange={(e) => { setStudentName(e.target.value) }} label={'StudentName'} />\n        \n                 <ErrorMessageForm error={studentNameerror} />\n                 <TextField value={birthDate} type='date' onChange={(e) => {onBirthDateChange(e.target.value) }} label={'Birth Date'} focused />\n        \n                 <ErrorMessageForm error={birthDateerror} />\n                <TextField value={age} type=\"text\"\n                  onChange={(e) => handleChange(e)}\n                  label={'Age'} />\n        \n                <ErrorMessageForm error={ageerror} />\n                <TextField value={fatherName} onChange={(e) => { setFatherName(e.target.value) }} label={'FatherName'} />\n        \n                <ErrorMessageForm error={fatherNameerror} />\n                <TextField value={phoneNo}\n                  type=\"text\"\n                  onChange={(e) => ChangephoneNo(e)}\n                  onBlur={(e) => { setPhoneNoerror(IsMobileNoValid(e.target.value)) }}\n                  error={phoneNoerror !== ''}\n                  helperText={phoneNoerror}\n                  label={'PhoneNo'} />\n                <TextField value={motherName} onChange={(e) => { setMotherName(e.target.value) }} label={'MotherName'} />\n                <ErrorMessageForm error={motherNameerror} />\n                <TextField value={phoneNo2} onChange={(e) => ChangephoneNo2(e)} onBlur={(e) => { setPhoneNoerror2(IsMobileNoValid(e.target.value)) }}\n                  error={phoneNoerror2 !== ''}\n                  helperText={phoneNoerror2}\n                  label={'PhoneNo2'} />\n                <TextField value={societyName} onChange={(e) => { setSocietyName(e.target.value) }} label={'SocietyName'} />\n                <ErrorMessageForm error={societyNameerror} />\n                <TextField value={studentAddress} onChange={(e) => { setStudentAddress(e.target.value) }} label={'StudentAddress'} />\n                <ErrorMessageForm error={studentAddresserror} />\n                {/* <TextField value={email}\n                  onChange={(e) => {setEmail(e.target.value) }}\n                  onBlur={(e) => {setEmailerror(IsEmailValid(e.target.value)) }}\n                  label={'Emailid'} /> */}\n        <TextField value={email}\n          onChange={(e) => {setEmail(e.target.value) }}\n          onBlur={(e) => {setEmailerror(IsEmailValid(e.target.value)) } }\n          error={emailerror !== ''}\n          helperText={emailerror}\n          label={'Emailid'} />\n                \n                <Button onClick={onSubmit}>Submit</Button>\n              </Card>\n              <br></br>\n            \n          </Container>\n          )\n         }\n        \nexport default AdmissionStudentDetails\n\n "],"sourceRoot":""}