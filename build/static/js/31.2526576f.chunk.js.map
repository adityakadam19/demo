{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","library/ErrorMessage/ErrorMessageForm.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","components/AddStaff/AddStaff.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","RootWrapper","concat","spacing","PageHeader","heading","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","_jsx","Container","children","display","alignItems","ErrorMessageForm","error","sx","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getToggleButtonUtilityClass","toggleButtonClasses","ToggleButtonRoot","ButtonBase","capitalize","size","selectedColor","palette","text","primary","main","typography","button","borderRadius","shape","padding","border","divider","action","active","fullWidth","width","disabled","disabledBackground","textDecoration","backgroundColor","alpha","hoverOpacity","selected","selectedOpacity","fontSize","pxToRem","ToggleButton","disableFocusRipple","onChange","onClick","value","slots","focusRipple","event","defaultPrevented","isValueSelected","candidate","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","toggleButtonGroupClasses","ToggleButtonGroupRoot","grouped","orientation","vertical","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","ToggleButtonGroup","exclusive","handleChange","buttonValue","index","newValue","slice","splice","handleExclusiveChange","role","map","child","AddStaff","alignment","setAlignment","useState","setName","nameerror","setNameerror","birthdate","setBirthdate","birthdateerror","setBirthdateerror","qualification","setQualification","qualificationerror","setQualificationerror","address","setAddress","addresserror","setAddresserror","phonenumber","setPhoneNumber","phonenumbererror","setPhoneNumbererror","email","setEmail","emailerror","setEmailerror","joiningdate","setJoiningDate","joiningdateerror","setJoiningDateerror","experience","setExperience","experienceerror","setExperienceerror","regex","emailRegExp","phoneno","_jsxs","newAlignment","TextField","e","target","label","mt","type","variant","clickSaveStaff","isError","test"],"mappings":"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","file":"static/js/31.2526576f.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\nimport { useNavigate } from 'react-router';\n\ninterface PageHeaderProps {\n  heading: string;\n}\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(2)};\n        margin-bottom: ${theme.spacing(2)};\n`\n);\n\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n  if (sessionStorage.getItem(\"UserId\") === null ||\n    sessionStorage.getItem(\"UserId\") === undefined) {\n    navigate('/')\n  }\n  return (\n    <Container>\n      <RootWrapper display=\"flex\" alignItems=\"center\">\n      <HeadingStyle>{(heading)}</HeadingStyle>\n       </RootWrapper>\n    </Container>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n};\n\nexport default PageHeader;","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessageForm({error}) {\n  return (\n    <div>\n      <Typography sx={{ color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessageForm","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  return _extends({}, theme.typography.button, {\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: theme.palette.action.disabled,\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of a button when it is selected.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import React from 'react'\nimport PageHeader from 'src/library/heading/pageHeader'\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { Container, TextField, Button,Card, Typography} from '@mui/material';\nimport { useState } from 'react';\nimport { number } from 'prop-types';\nimport ErrorMessageForm from 'src/library/ErrorMessage/ErrorMessageForm';\n\n\n\nfunction AddStaff() {\n    const [alignment, setAlignment] = React.useState('Teacher');\n    const [name,setName]=useState('');\n    const [nameerror, setNameerror] =useState('')\n    const [birthdate, setBirthdate] = useState('')\n    const [birthdateerror, setBirthdateerror] = useState('')\n    const [qualification, setQualification]=useState('');\n    const [qualificationerror, setQualificationerror] = useState('')\n    const [address, setAddress]=useState('');\n    const [addresserror, setAddresserror] = useState('')\n    const [phonenumber, setPhoneNumber]=useState('');\n    const [phonenumbererror, setPhoneNumbererror] = useState('')\n    const [email, setEmail]=useState('');\n    const [emailerror, setEmailerror] = useState('') \n    const [joiningdate, setJoiningDate]=useState('');\n    const [joiningdateerror, setJoiningDateerror] =useState('') \n    const [experience, setExperience]=useState(''); \n    const [experienceerror, setExperienceerror] = useState('')\n  const handleChange = (\n    event: React.MouseEvent<HTMLElement>,\n    newAlignment: string,\n  ) => {\n    setAlignment(newAlignment);\n  };\n\n  const regex =  /^[a-zA-Z]*$/; \n  const emailRegExp = /^\\S+@\\S+\\.\\S+$/;\n  var phoneno = /^\\d{10}$/;\n\nconst clickSaveStaff = ()=>{\nlet isError = false;\nif(name ===''){\n    setNameerror(\"This field is required\")\n    isError = true\n  } else if(!regex.test(name)){\n    setNameerror(\"Accept only alphabetic characters\")\n  }\n  else{\n    setNameerror('')\n   \n  }\n\n  if(birthdate ===''){\n    setBirthdateerror(\"This field is required\")\n    isError = true\n  }else{\n    setBirthdateerror('')\n   \n  }\n\n  if(qualification ===''){\n    setQualificationerror(\"This field is required\")\n    isError = true\n  }else{\n    setQualificationerror('')\n   \n  }\n\n  if(address ===''){\n    setAddresserror(\"This field is required\")\n    isError = true\n  }else{\n    setAddresserror('')\n   \n  }\n\n  if(phonenumber ===''){\n    setPhoneNumbererror(\"This field is required\")\n  isError = true\n} \nelse if(!phoneno.test(phonenumber)){\n  setPhoneNumbererror('Invalid phone number');                  \n}\n\nelse{\n  setPhoneNumbererror('')\n \n}\n\n  if(email ===''){\n    setEmailerror(\"This field is required\")\n  isError = true\n} \nelse if(!emailRegExp.test(email)){\n  setEmailerror('Invalid email address');                  \n}\n\nelse{\n  setEmailerror('')\n \n}\n\n  if(joiningdate ===''){\n    setJoiningDateerror(\"This field is required\")\n    isError = true\n  }else{\n    setJoiningDateerror('')\n   \n  }\n\n  if(experience ===''){\n    setExperienceerror(\"This field is required\")\n    isError = true\n  }else{\n    setExperienceerror('')\n   \n  }\n}\n\n\n\n\n  return (\n    <Container>\n        \n        <PageHeader heading={'Add Staff'}/>\n        <ToggleButtonGroup\n      color=\"primary\"\n      value={alignment}\n      exclusive\n      onChange={handleChange}\n      aria-label=\"Platform\"\n    >\n      <ToggleButton value=\"Teacher\">Teacher</ToggleButton>\n      <ToggleButton value=\"Admin\">Admin Staff</ToggleButton>\n      \n    </ToggleButtonGroup>\n    <Card >\n    <TextField value={name} onChange={(e)=>{setName(e.target.value)}} label={'Name'}/>\n    <ErrorMessageForm error={nameerror}/>\n    \n    <Typography sx={{mt:\"3px\" ,fontSize:\"10px\"}}>Birthdate</Typography>\n    <TextField type={'date'} sx={{mt:\"-5px\"}}/>\n    <ErrorMessageForm error={birthdateerror}/>\n    \n    <TextField value={qualification} onChange={(e)=>{setQualification(e.target.value)}} \n    label={'Qualification'}/>\n    <ErrorMessageForm error={qualificationerror}/>\n    \n    <TextField value={address} onChange={(e)=>{setAddress(e.target.value)}} \n    label={'Address'}/>\n    <ErrorMessageForm error={addresserror}/>\n    \n    <TextField value={phonenumber} onChange={(e)=>{setPhoneNumber(e.target.value)}} \n    label={'Phone Number'}/>\n    <ErrorMessageForm error={phonenumbererror}/>\n    \n    <TextField value={email} onChange={(e)=>{setEmail(e.target.value)}} \n    label={'Email'}/>\n    <ErrorMessageForm error={emailerror}/>\n    \n    <Typography sx={{mt:\"3px\" ,fontSize:\"10px\"}}>JoiningDate</Typography>\n    <TextField type={'date'} sx={{mt:\"-5px\"}}/>\n    <ErrorMessageForm error={joiningdateerror}/>\n    \n    <TextField value={experience} onChange={(e)=>{setExperience(e.target.value)}} \n    label={'Experience'}/>\n    <ErrorMessageForm error={experienceerror}/>\n    \n    <Button  variant='contained' onClick={clickSaveStaff}>\n                        Save\n                    </Button>\n</Card>\n    </Container>\n  )\n}\n\nexport default AddStaff"],"sourceRoot":""}