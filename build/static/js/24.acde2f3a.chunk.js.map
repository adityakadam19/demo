{"version":3,"sources":["library/StyledComponents/CommonStyled.tsx","library/heading/pageHeader.tsx","library/ErrorMessage/ErrorMessage.tsx","library/Card/SingleButton.tsx","library/Card/SelectedCard.tsx","library/StyledComponents/DotLegendStyled.tsx","library/Legend/DotLegend.tsx","library/Card/Card2Text.tsx","library/List/ListCard.tsx","components/SchoolNotice/SchoolNotice.tsx"],"names":["HeadingStyle","styled","Typography","_ref","theme","IconCardSize","Box","_templateObject","_taggedTemplateLiteral","ButtonPrimary","Button","_ref2","color","RootWrapper","concat","spacing","PageHeader","heading","useTheme","navigate","useNavigate","sessionStorage","getItem","undefined","_jsx","Container","children","display","alignItems","ErrorMessage","error","sx","textAlign","SingleButton","Item","ClickItem","type","onClick","IsActive","_jsxs","Card","CheckCircleIcon","RadioButtonUncheckedIcon","Name","background","SelectedCard","ItemList","clickItem","value","map","item","Id","Grid","container","i","xs","DotLegendStyled","DotLegend","_Fragment","style","backgroundColor","Value","variant","mt","Card2Text","clickNavigate","href","Link","rel","target","textDecoration","component","mb","justifyContent","p","Text1","Text2","ListCard","length","SchoolNotice","dispatch","useDispatch","SchoolNoticeDetails","useSelector","state","ViewSchoolNotice","SchoolNoticeDates","NoticeDate","AllowNext","AllowPrevious","setItemList","useState","startdate","setStartDate","endDate","setEndDate","useEffect","GetNoticeDateBody","ClassId","parseInt","StartDate","EndDate","GetSchoolNoticeDate","assignDate","filter","obj","toString","GetHighlightedDateBody","AssignDate","getDateFormatted","GetSchoolNotice","clickPrevNext","getNextDate","IconButton","disabled","height","ArrowLeftIcon","ArrowRightIcon"],"mappings":"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","file":"static/js/24.acde2f3a.chunk.js","sourcesContent":["import { Box, Button, Typography, styled} from '@mui/material';\n\nexport const HeadingStyle= styled(Typography)( ({ theme }) =>`\n\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nmargin: auto;\ntext-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\nfont-family: roboto;\n@media (min-width: 280px) and (max-width: 320px)  {\n  font-size: 18px;\n};\n@media (min-width: 600px)  {\n  font-size: 22px;\n};\n`);\n\nexport const IconCardSize = styled(Box)`\n \n  width:70px;\n  height:75px;\n  @media (max-width: 320px) {\n    width: 60px;\n    height: 65px;\n  }\n  @media (max-width: 280px) {\n    width: 50px;\n    height: 55px;\n  }\n\n  border-radius: 10px;\n  margin-bottom: 5px;\n  text-align: center;\ntext-decoration: none;\n  box-shadow: 1px 4px 5px 2px rgba(0, 0, 0, 0.3);\n`;\n\n\nexport const ButtonPrimary = styled(Button)(\n  ({ theme, color }) => `\ncolor: white;\nfont-size: 12px;\nfont-family: 'Roboto';\ntext-decoration: none;\nheight:30px;\nborder-radius: 3px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n@media (min-width: 600px) {\n  \n };\n`);","import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, Typography, Box, Divider, useTheme, Container } from '@mui/material';\nimport { HeadingStyle } from '../StyledComponents/CommonStyled';\nimport { useNavigate } from 'react-router';\n\ninterface PageHeaderProps {\n  heading: string;\n}\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(2)};\n        margin-bottom: ${theme.spacing(2)};\n`\n);\n\nconst PageHeader: FC<PageHeaderProps> = ({ heading}) => {\n  const theme = useTheme();\n\n  const navigate = useNavigate();\n  if (sessionStorage.getItem(\"UserId\") === null ||\n    sessionStorage.getItem(\"UserId\") === undefined) {\n    navigate('/')\n  }\n  return (\n    <Container>\n      <RootWrapper display=\"flex\" alignItems=\"center\">\n      <HeadingStyle>{(heading)}</HeadingStyle>\n       </RootWrapper>\n    </Container>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n};\n\nexport default PageHeader;","import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction ErrorMessage({error}) {\n  return (\n    <div>\n      <Typography sx={{textAlign:\"center\" , color:\"red\"}}>{error}</Typography>  \n    </div>\n  )\n}\n\nexport default ErrorMessage","import { Button ,Card, Checkbox, Typography} from '@mui/material'\nimport React from 'react'\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nconst SingleButton = ({Item,ClickItem ,type=\"checkBox\"}) => {\n \n  const onClick=()=>{\n    Item = {...Item,IsActive:Item.IsActive?Item.IsActive:!Item.IsActive}\n    ClickItem(Item)}\n  return (\n    <div>\n      {type === \"checkBox\" ?  <Card sx={{display:\"flex\"}}>\n      {Item.IsActive ? <CheckCircleIcon  onClick={onClick} /> :\n           <RadioButtonUncheckedIcon  onClick={onClick}  />}\n          <Typography>{Item.Name}</Typography>\n    </Card>:\n    <Card sx={{background:Item.IsActive  ? \"#90CAF9\" : \"#ffffff\" , textAlign:\"center\"}}   onClick={onClick}>{Item.Name}</Card>\n  }\n   \n\n    </div>\n  )\n}\n\nexport default SingleButton","import React,{useState} from 'react'\n\nimport { Grid } from '@mui/material';\nimport SingleButton from './SingleButton';\n\n\nfunction SelectedCard({ItemList,clickItem , type=\"checkBox\"}) {\n\n   const onClick = (value) => {\n      ItemList = ItemList.map((item) => {\n        return item.Id === value.Id ?\n          value :\n          { ...item, IsActive: false }\n      });\n      clickItem(ItemList)\n    }\n  \n   \n  return (\n\n    <Grid container spacing={1}>\n    \n    {ItemList.map((item, i) => {\n       \n           return (\n            <Grid  item xs={4}  key={i}>\n            <SingleButton Item={item}\n             ClickItem={onClick} type={type}></SingleButton>\n              </Grid>\n            )\n          })\n        }\n    </Grid>\n  )\n}\n\nexport default SelectedCard","import { Box, styled } from \"@mui/material\";\n\nexport const DotLegendStyled = styled(Box)(\n    ({ theme, color }) => `\n        border-radius: 22px;\n        width: ${theme.spacing(1.5)};\n        height: ${theme.spacing(1.5)};\n        @media (min-width: 280px) and (max-width: 320px)  {\n          width: ${theme.spacing(1)};\n          height: ${theme.spacing(1)};\n        };\n        display: inline-block;\n        margin-right: ${theme.spacing(1)};\n        margin-top: -${theme.spacing(0.1)};\n        border: 1px #303030   solid;\n        \n  \n    `\n);","import { Typography,Box } from '@mui/material'\nimport React from 'react'\nimport { DotLegendStyled } from '../StyledComponents/DotLegendStyled'\n\n\nconst DotLegend = ({ItemList}) => {\n  return (<>\n    {\n      ItemList.map((item,i)=>{ return (<Box key={i} sx={{display:\"flex\" }}>\n     <DotLegendStyled  style={{backgroundColor:item.Value}}/>\n    <Typography variant='h6' mt={-0.7}>{item.Name}</Typography>\n    </Box>)\n      })\n      }\n    </>\n  )\n}\n\nexport default DotLegend","import React from 'react'\nimport { Box , Card, Typography } from '@mui/material'\nfunction Card2Text({ Item,clickNavigate}) {\n  // function Card2Text({ Text1,Text2,clickNavigate ,Link}) {\n  return (\n    <>\n    {/* <a href=\"http://google.com\" rel=\"noreferrer\" target=\"_blank\" style={{ textDecoration: 'none' }}> */}\n    <a href={Item.Link} rel=\"noreferrer\" target=\"_blank\" style={{ textDecoration: 'none' }}>\n       <Card component={Box} mb={1} onClick={()=>{clickNavigate(Item.Id)}}>\n    <Box display={\"flex\"} justifyContent={'space-between'}  p={0.5}>\n      <Typography variant=\"h5\">\n          {Item.Text1}\n        </Typography>\n      <Typography variant='body2' color={\"Green\"} >\n         {Item.Text2}\n     </Typography>\n    </Box>\n    </Card>\n    </a>\n    \n    </>\n \n  )\n}\n\nexport default Card2Text","import React from 'react'\nimport Card2Text from '../Card/Card2Text'\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\n\nfunction ListCard({ ItemList, clickNavigate }) {\n  return (\n    <div>\n\n      {ItemList.length == 0 ? <ErrorMessage error={'No records found'} /> :\n        <>\n          {ItemList.map((Item, i) => {\n            return (\n              <div key={i}>\n                <Card2Text Item={Item}\n                // <Card2Text Text1={Item.Text1} Text2={Item.Text2} Link={Item.Link} \n                clickNavigate={clickNavigate} />\n              </div>\n            )\n          })}\n\n        </>\n      }\n\n    </div>\n  )\n}\n\nexport default ListCard","import { Card, Container, Grid, IconButton } from '@mui/material'\nimport React, { useState, useEffect } from 'react'\nimport PageHeader from 'src/library/heading/pageHeader'\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\nimport DotLegend from 'src/library/Legend/DotLegend'\nimport { GetSchoolNotice,GetSchoolNoticeDate } from 'src/requests/SchoolNotice/RequestSchoolNotice';\nimport { IGetDateForLegendNoticeBody,IGetDatewiseSchoolNoticeBody } from 'src/Interface/Student/ISchoolNotice';\nimport ListCard from 'src/library/List/ListCard';\nimport Card2Text from 'src/library/Card/Card2Text';\nimport { useNavigate } from 'react-router';\nimport SuspenseLoader from 'src/layouts/Components/SuspenseLoader';\nimport SelectedCard from 'src/library/Card/SelectedCard';\nimport { getDateFormatted, getNextDate } from '../Common/util';\n\n\nconst SchoolNotice = () => {\n    const dispatch = useDispatch();\n  const navigate = useNavigate()\n\n  const SchoolNoticeDetails: any = useSelector((state: RootState) => state.ViewSchoolNotice.SchoolNotice);\n\n  const SchoolNoticeDates: any = useSelector((state: RootState) => state.ViewSchoolNotice.NoticeDate);\n\n  const AllowNext: any = useSelector((state: RootState) => state.ViewSchoolNotice.AllowNext);\n\n  const AllowPrevious: any = useSelector((state: RootState) => state.ViewSchoolNotice.AllowPrevious);\n\n  const [ItemList, setItemList] = useState([])\n  const [startdate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n\n  useEffect(() => {\n    const GetNoticeDateBody: IGetDatewiseSchoolNoticeBody =\n    {\n      ClassId: parseInt(sessionStorage.getItem(\"ClassId\")),\n      StartDate: startdate,\n      EndDate: endDate\n    }\n    dispatch(GetSchoolNoticeDate(GetNoticeDateBody));\n  }, [endDate])\n\n  useEffect(() => {\n    if (ItemList.length > 0) {\n      const assignDate = ItemList\n        .filter((item) => { return (item.IsActive) })\n        .map((obj) => { return obj.Value }).toString();\n      const GetHighlightedDateBody: IGetDateForLegendNoticeBody =\n      {\n        ClassId: parseInt(sessionStorage.getItem(\"ClassId\")),\n        AssignDate: getDateFormatted(assignDate),\n      }\n      dispatch(GetSchoolNotice(GetHighlightedDateBody));\n    }\n  }, [ItemList])\n\n    useEffect(() => {\n    setItemList(SchoolNoticeDates)\n  }, [SchoolNoticeDates])\n\n  const clickItem = (value) => {\n    setItemList(value)\n  }\n\n  const clickPrevNext = (value) => {\n    if (value === -1) {\n      setStartDate('')\n      setEndDate(getNextDate(ItemList[0].Value, -1))\n    }\n    else if (value === 1) {\n      setStartDate(getNextDate(ItemList[ItemList.length - 1].Value, 1))\n      setEndDate('')\n    }\n  }\n\n  const clickViewSchoolNotice = (value) => {\n    navigate('ViewSchoolNotice/' + value)\n  }\n  \n\n  return (\n    \n      <Container>\n      <PageHeader heading={'View School Notice'} />\n      <DotLegend ItemList={[{ Value: 'Green', Name: 'Recieved School Notice' }]} /><br></br>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item xs={2} alignItems={\"center\"} >\n          <IconButton disabled={!AllowPrevious}>\n            <Card sx={{ textAlign: 'center', height: \"40px\" }}>\n              <ArrowLeftIcon onClick={() => clickPrevNext(-1)}></ArrowLeftIcon>\n            </Card>\n          </IconButton>\n        </Grid>\n        <Grid item xs={8}>\n          <SelectedCard ItemList={ItemList} clickItem={clickItem} type='Button' />\n        </Grid>\n        <Grid item xs={2} alignItems={\"center\"} >\n          <IconButton disabled={!AllowNext}>\n            <Card sx={{ textAlign: 'center', height: \"40px\" }}>\n              <ArrowRightIcon onClick={() => clickPrevNext(1)}></ArrowRightIcon>\n            </Card>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <br></br>\n      {\n        <ListCard ItemList={SchoolNoticeDetails} clickNavigate={clickViewSchoolNotice} />}\n\n    </Container>\n    \n  )\n}\n\nexport default SchoolNotice\n"],"sourceRoot":""}